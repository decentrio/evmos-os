// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package evmv1

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_V5Params_4_list)(nil)

type _V5Params_4_list struct {
	list *[]int64
}

func (x *_V5Params_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_V5Params_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfInt64((*x.list)[i])
}

func (x *_V5Params_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Int()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_V5Params_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Int()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_V5Params_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message V5Params at list field ExtraEips as it is not of Message kind"))
}

func (x *_V5Params_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_V5Params_4_list) NewElement() protoreflect.Value {
	v := int64(0)
	return protoreflect.ValueOfInt64(v)
}

func (x *_V5Params_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_V5Params                       protoreflect.MessageDescriptor
	fd_V5Params_evm_denom             protoreflect.FieldDescriptor
	fd_V5Params_enable_create         protoreflect.FieldDescriptor
	fd_V5Params_enable_call           protoreflect.FieldDescriptor
	fd_V5Params_extra_eips            protoreflect.FieldDescriptor
	fd_V5Params_chain_config          protoreflect.FieldDescriptor
	fd_V5Params_allow_unprotected_txs protoreflect.FieldDescriptor
)

func init() {
	file_os_evm_v1_legacy_params_v5_proto_init()
	md_V5Params = File_os_evm_v1_legacy_params_v5_proto.Messages().ByName("V5Params")
	fd_V5Params_evm_denom = md_V5Params.Fields().ByName("evm_denom")
	fd_V5Params_enable_create = md_V5Params.Fields().ByName("enable_create")
	fd_V5Params_enable_call = md_V5Params.Fields().ByName("enable_call")
	fd_V5Params_extra_eips = md_V5Params.Fields().ByName("extra_eips")
	fd_V5Params_chain_config = md_V5Params.Fields().ByName("chain_config")
	fd_V5Params_allow_unprotected_txs = md_V5Params.Fields().ByName("allow_unprotected_txs")
}

var _ protoreflect.Message = (*fastReflection_V5Params)(nil)

type fastReflection_V5Params V5Params

func (x *V5Params) ProtoReflect() protoreflect.Message {
	return (*fastReflection_V5Params)(x)
}

func (x *V5Params) slowProtoReflect() protoreflect.Message {
	mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_V5Params_messageType fastReflection_V5Params_messageType
var _ protoreflect.MessageType = fastReflection_V5Params_messageType{}

type fastReflection_V5Params_messageType struct{}

func (x fastReflection_V5Params_messageType) Zero() protoreflect.Message {
	return (*fastReflection_V5Params)(nil)
}
func (x fastReflection_V5Params_messageType) New() protoreflect.Message {
	return new(fastReflection_V5Params)
}
func (x fastReflection_V5Params_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_V5Params
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_V5Params) Descriptor() protoreflect.MessageDescriptor {
	return md_V5Params
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_V5Params) Type() protoreflect.MessageType {
	return _fastReflection_V5Params_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_V5Params) New() protoreflect.Message {
	return new(fastReflection_V5Params)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_V5Params) Interface() protoreflect.ProtoMessage {
	return (*V5Params)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_V5Params) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EvmDenom != "" {
		value := protoreflect.ValueOfString(x.EvmDenom)
		if !f(fd_V5Params_evm_denom, value) {
			return
		}
	}
	if x.EnableCreate != false {
		value := protoreflect.ValueOfBool(x.EnableCreate)
		if !f(fd_V5Params_enable_create, value) {
			return
		}
	}
	if x.EnableCall != false {
		value := protoreflect.ValueOfBool(x.EnableCall)
		if !f(fd_V5Params_enable_call, value) {
			return
		}
	}
	if len(x.ExtraEips) != 0 {
		value := protoreflect.ValueOfList(&_V5Params_4_list{list: &x.ExtraEips})
		if !f(fd_V5Params_extra_eips, value) {
			return
		}
	}
	if x.ChainConfig != nil {
		value := protoreflect.ValueOfMessage(x.ChainConfig.ProtoReflect())
		if !f(fd_V5Params_chain_config, value) {
			return
		}
	}
	if x.AllowUnprotectedTxs != false {
		value := protoreflect.ValueOfBool(x.AllowUnprotectedTxs)
		if !f(fd_V5Params_allow_unprotected_txs, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_V5Params) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "os.evm.v1.V5Params.evm_denom":
		return x.EvmDenom != ""
	case "os.evm.v1.V5Params.enable_create":
		return x.EnableCreate != false
	case "os.evm.v1.V5Params.enable_call":
		return x.EnableCall != false
	case "os.evm.v1.V5Params.extra_eips":
		return len(x.ExtraEips) != 0
	case "os.evm.v1.V5Params.chain_config":
		return x.ChainConfig != nil
	case "os.evm.v1.V5Params.allow_unprotected_txs":
		return x.AllowUnprotectedTxs != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5Params"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5Params does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5Params) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "os.evm.v1.V5Params.evm_denom":
		x.EvmDenom = ""
	case "os.evm.v1.V5Params.enable_create":
		x.EnableCreate = false
	case "os.evm.v1.V5Params.enable_call":
		x.EnableCall = false
	case "os.evm.v1.V5Params.extra_eips":
		x.ExtraEips = nil
	case "os.evm.v1.V5Params.chain_config":
		x.ChainConfig = nil
	case "os.evm.v1.V5Params.allow_unprotected_txs":
		x.AllowUnprotectedTxs = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5Params"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5Params does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_V5Params) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "os.evm.v1.V5Params.evm_denom":
		value := x.EvmDenom
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5Params.enable_create":
		value := x.EnableCreate
		return protoreflect.ValueOfBool(value)
	case "os.evm.v1.V5Params.enable_call":
		value := x.EnableCall
		return protoreflect.ValueOfBool(value)
	case "os.evm.v1.V5Params.extra_eips":
		if len(x.ExtraEips) == 0 {
			return protoreflect.ValueOfList(&_V5Params_4_list{})
		}
		listValue := &_V5Params_4_list{list: &x.ExtraEips}
		return protoreflect.ValueOfList(listValue)
	case "os.evm.v1.V5Params.chain_config":
		value := x.ChainConfig
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "os.evm.v1.V5Params.allow_unprotected_txs":
		value := x.AllowUnprotectedTxs
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5Params"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5Params does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5Params) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "os.evm.v1.V5Params.evm_denom":
		x.EvmDenom = value.Interface().(string)
	case "os.evm.v1.V5Params.enable_create":
		x.EnableCreate = value.Bool()
	case "os.evm.v1.V5Params.enable_call":
		x.EnableCall = value.Bool()
	case "os.evm.v1.V5Params.extra_eips":
		lv := value.List()
		clv := lv.(*_V5Params_4_list)
		x.ExtraEips = *clv.list
	case "os.evm.v1.V5Params.chain_config":
		x.ChainConfig = value.Message().Interface().(*V5ChainConfig)
	case "os.evm.v1.V5Params.allow_unprotected_txs":
		x.AllowUnprotectedTxs = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5Params"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5Params does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5Params) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5Params.extra_eips":
		if x.ExtraEips == nil {
			x.ExtraEips = []int64{}
		}
		value := &_V5Params_4_list{list: &x.ExtraEips}
		return protoreflect.ValueOfList(value)
	case "os.evm.v1.V5Params.chain_config":
		if x.ChainConfig == nil {
			x.ChainConfig = new(V5ChainConfig)
		}
		return protoreflect.ValueOfMessage(x.ChainConfig.ProtoReflect())
	case "os.evm.v1.V5Params.evm_denom":
		panic(fmt.Errorf("field evm_denom of message os.evm.v1.V5Params is not mutable"))
	case "os.evm.v1.V5Params.enable_create":
		panic(fmt.Errorf("field enable_create of message os.evm.v1.V5Params is not mutable"))
	case "os.evm.v1.V5Params.enable_call":
		panic(fmt.Errorf("field enable_call of message os.evm.v1.V5Params is not mutable"))
	case "os.evm.v1.V5Params.allow_unprotected_txs":
		panic(fmt.Errorf("field allow_unprotected_txs of message os.evm.v1.V5Params is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5Params"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5Params does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_V5Params) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5Params.evm_denom":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5Params.enable_create":
		return protoreflect.ValueOfBool(false)
	case "os.evm.v1.V5Params.enable_call":
		return protoreflect.ValueOfBool(false)
	case "os.evm.v1.V5Params.extra_eips":
		list := []int64{}
		return protoreflect.ValueOfList(&_V5Params_4_list{list: &list})
	case "os.evm.v1.V5Params.chain_config":
		m := new(V5ChainConfig)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "os.evm.v1.V5Params.allow_unprotected_txs":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5Params"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5Params does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_V5Params) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in os.evm.v1.V5Params", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_V5Params) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5Params) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_V5Params) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_V5Params) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*V5Params)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.EvmDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EnableCreate {
			n += 2
		}
		if x.EnableCall {
			n += 2
		}
		if len(x.ExtraEips) > 0 {
			l = 0
			for _, e := range x.ExtraEips {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if x.ChainConfig != nil {
			l = options.Size(x.ChainConfig)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.AllowUnprotectedTxs {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*V5Params)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AllowUnprotectedTxs {
			i--
			if x.AllowUnprotectedTxs {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x30
		}
		if x.ChainConfig != nil {
			encoded, err := options.Marshal(x.ChainConfig)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ExtraEips) > 0 {
			var pksize2 int
			for _, num := range x.ExtraEips {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num1 := range x.ExtraEips {
				num := uint64(num1)
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x22
		}
		if x.EnableCall {
			i--
			if x.EnableCall {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x18
		}
		if x.EnableCreate {
			i--
			if x.EnableCreate {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
		}
		if len(x.EvmDenom) > 0 {
			i -= len(x.EvmDenom)
			copy(dAtA[i:], x.EvmDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EvmDenom)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*V5Params)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5Params: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5Params: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EvmDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EvmDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnableCreate", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.EnableCreate = bool(v != 0)
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnableCall", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.EnableCall = bool(v != 0)
			case 4:
				if wireType == 0 {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.ExtraEips = append(x.ExtraEips, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.ExtraEips) == 0 {
						x.ExtraEips = make([]int64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v int64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= int64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.ExtraEips = append(x.ExtraEips, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExtraEips", wireType)
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainConfig", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ChainConfig == nil {
					x.ChainConfig = &V5ChainConfig{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ChainConfig); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AllowUnprotectedTxs", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.AllowUnprotectedTxs = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_V5ChainConfig                      protoreflect.MessageDescriptor
	fd_V5ChainConfig_homestead_block      protoreflect.FieldDescriptor
	fd_V5ChainConfig_dao_fork_block       protoreflect.FieldDescriptor
	fd_V5ChainConfig_dao_fork_support     protoreflect.FieldDescriptor
	fd_V5ChainConfig_eip150_block         protoreflect.FieldDescriptor
	fd_V5ChainConfig_eip150_hash          protoreflect.FieldDescriptor
	fd_V5ChainConfig_eip155_block         protoreflect.FieldDescriptor
	fd_V5ChainConfig_eip158_block         protoreflect.FieldDescriptor
	fd_V5ChainConfig_byzantium_block      protoreflect.FieldDescriptor
	fd_V5ChainConfig_constantinople_block protoreflect.FieldDescriptor
	fd_V5ChainConfig_petersburg_block     protoreflect.FieldDescriptor
	fd_V5ChainConfig_istanbul_block       protoreflect.FieldDescriptor
	fd_V5ChainConfig_muir_glacier_block   protoreflect.FieldDescriptor
	fd_V5ChainConfig_berlin_block         protoreflect.FieldDescriptor
	fd_V5ChainConfig_london_block         protoreflect.FieldDescriptor
	fd_V5ChainConfig_arrow_glacier_block  protoreflect.FieldDescriptor
	fd_V5ChainConfig_gray_glacier_block   protoreflect.FieldDescriptor
	fd_V5ChainConfig_merge_netsplit_block protoreflect.FieldDescriptor
	fd_V5ChainConfig_shanghai_block       protoreflect.FieldDescriptor
	fd_V5ChainConfig_cancun_block         protoreflect.FieldDescriptor
)

func init() {
	file_os_evm_v1_legacy_params_v5_proto_init()
	md_V5ChainConfig = File_os_evm_v1_legacy_params_v5_proto.Messages().ByName("V5ChainConfig")
	fd_V5ChainConfig_homestead_block = md_V5ChainConfig.Fields().ByName("homestead_block")
	fd_V5ChainConfig_dao_fork_block = md_V5ChainConfig.Fields().ByName("dao_fork_block")
	fd_V5ChainConfig_dao_fork_support = md_V5ChainConfig.Fields().ByName("dao_fork_support")
	fd_V5ChainConfig_eip150_block = md_V5ChainConfig.Fields().ByName("eip150_block")
	fd_V5ChainConfig_eip150_hash = md_V5ChainConfig.Fields().ByName("eip150_hash")
	fd_V5ChainConfig_eip155_block = md_V5ChainConfig.Fields().ByName("eip155_block")
	fd_V5ChainConfig_eip158_block = md_V5ChainConfig.Fields().ByName("eip158_block")
	fd_V5ChainConfig_byzantium_block = md_V5ChainConfig.Fields().ByName("byzantium_block")
	fd_V5ChainConfig_constantinople_block = md_V5ChainConfig.Fields().ByName("constantinople_block")
	fd_V5ChainConfig_petersburg_block = md_V5ChainConfig.Fields().ByName("petersburg_block")
	fd_V5ChainConfig_istanbul_block = md_V5ChainConfig.Fields().ByName("istanbul_block")
	fd_V5ChainConfig_muir_glacier_block = md_V5ChainConfig.Fields().ByName("muir_glacier_block")
	fd_V5ChainConfig_berlin_block = md_V5ChainConfig.Fields().ByName("berlin_block")
	fd_V5ChainConfig_london_block = md_V5ChainConfig.Fields().ByName("london_block")
	fd_V5ChainConfig_arrow_glacier_block = md_V5ChainConfig.Fields().ByName("arrow_glacier_block")
	fd_V5ChainConfig_gray_glacier_block = md_V5ChainConfig.Fields().ByName("gray_glacier_block")
	fd_V5ChainConfig_merge_netsplit_block = md_V5ChainConfig.Fields().ByName("merge_netsplit_block")
	fd_V5ChainConfig_shanghai_block = md_V5ChainConfig.Fields().ByName("shanghai_block")
	fd_V5ChainConfig_cancun_block = md_V5ChainConfig.Fields().ByName("cancun_block")
}

var _ protoreflect.Message = (*fastReflection_V5ChainConfig)(nil)

type fastReflection_V5ChainConfig V5ChainConfig

func (x *V5ChainConfig) ProtoReflect() protoreflect.Message {
	return (*fastReflection_V5ChainConfig)(x)
}

func (x *V5ChainConfig) slowProtoReflect() protoreflect.Message {
	mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_V5ChainConfig_messageType fastReflection_V5ChainConfig_messageType
var _ protoreflect.MessageType = fastReflection_V5ChainConfig_messageType{}

type fastReflection_V5ChainConfig_messageType struct{}

func (x fastReflection_V5ChainConfig_messageType) Zero() protoreflect.Message {
	return (*fastReflection_V5ChainConfig)(nil)
}
func (x fastReflection_V5ChainConfig_messageType) New() protoreflect.Message {
	return new(fastReflection_V5ChainConfig)
}
func (x fastReflection_V5ChainConfig_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_V5ChainConfig
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_V5ChainConfig) Descriptor() protoreflect.MessageDescriptor {
	return md_V5ChainConfig
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_V5ChainConfig) Type() protoreflect.MessageType {
	return _fastReflection_V5ChainConfig_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_V5ChainConfig) New() protoreflect.Message {
	return new(fastReflection_V5ChainConfig)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_V5ChainConfig) Interface() protoreflect.ProtoMessage {
	return (*V5ChainConfig)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_V5ChainConfig) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.HomesteadBlock != "" {
		value := protoreflect.ValueOfString(x.HomesteadBlock)
		if !f(fd_V5ChainConfig_homestead_block, value) {
			return
		}
	}
	if x.DaoForkBlock != "" {
		value := protoreflect.ValueOfString(x.DaoForkBlock)
		if !f(fd_V5ChainConfig_dao_fork_block, value) {
			return
		}
	}
	if x.DaoForkSupport != false {
		value := protoreflect.ValueOfBool(x.DaoForkSupport)
		if !f(fd_V5ChainConfig_dao_fork_support, value) {
			return
		}
	}
	if x.Eip150Block != "" {
		value := protoreflect.ValueOfString(x.Eip150Block)
		if !f(fd_V5ChainConfig_eip150_block, value) {
			return
		}
	}
	if x.Eip150Hash != "" {
		value := protoreflect.ValueOfString(x.Eip150Hash)
		if !f(fd_V5ChainConfig_eip150_hash, value) {
			return
		}
	}
	if x.Eip155Block != "" {
		value := protoreflect.ValueOfString(x.Eip155Block)
		if !f(fd_V5ChainConfig_eip155_block, value) {
			return
		}
	}
	if x.Eip158Block != "" {
		value := protoreflect.ValueOfString(x.Eip158Block)
		if !f(fd_V5ChainConfig_eip158_block, value) {
			return
		}
	}
	if x.ByzantiumBlock != "" {
		value := protoreflect.ValueOfString(x.ByzantiumBlock)
		if !f(fd_V5ChainConfig_byzantium_block, value) {
			return
		}
	}
	if x.ConstantinopleBlock != "" {
		value := protoreflect.ValueOfString(x.ConstantinopleBlock)
		if !f(fd_V5ChainConfig_constantinople_block, value) {
			return
		}
	}
	if x.PetersburgBlock != "" {
		value := protoreflect.ValueOfString(x.PetersburgBlock)
		if !f(fd_V5ChainConfig_petersburg_block, value) {
			return
		}
	}
	if x.IstanbulBlock != "" {
		value := protoreflect.ValueOfString(x.IstanbulBlock)
		if !f(fd_V5ChainConfig_istanbul_block, value) {
			return
		}
	}
	if x.MuirGlacierBlock != "" {
		value := protoreflect.ValueOfString(x.MuirGlacierBlock)
		if !f(fd_V5ChainConfig_muir_glacier_block, value) {
			return
		}
	}
	if x.BerlinBlock != "" {
		value := protoreflect.ValueOfString(x.BerlinBlock)
		if !f(fd_V5ChainConfig_berlin_block, value) {
			return
		}
	}
	if x.LondonBlock != "" {
		value := protoreflect.ValueOfString(x.LondonBlock)
		if !f(fd_V5ChainConfig_london_block, value) {
			return
		}
	}
	if x.ArrowGlacierBlock != "" {
		value := protoreflect.ValueOfString(x.ArrowGlacierBlock)
		if !f(fd_V5ChainConfig_arrow_glacier_block, value) {
			return
		}
	}
	if x.GrayGlacierBlock != "" {
		value := protoreflect.ValueOfString(x.GrayGlacierBlock)
		if !f(fd_V5ChainConfig_gray_glacier_block, value) {
			return
		}
	}
	if x.MergeNetsplitBlock != "" {
		value := protoreflect.ValueOfString(x.MergeNetsplitBlock)
		if !f(fd_V5ChainConfig_merge_netsplit_block, value) {
			return
		}
	}
	if x.ShanghaiBlock != "" {
		value := protoreflect.ValueOfString(x.ShanghaiBlock)
		if !f(fd_V5ChainConfig_shanghai_block, value) {
			return
		}
	}
	if x.CancunBlock != "" {
		value := protoreflect.ValueOfString(x.CancunBlock)
		if !f(fd_V5ChainConfig_cancun_block, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_V5ChainConfig) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "os.evm.v1.V5ChainConfig.homestead_block":
		return x.HomesteadBlock != ""
	case "os.evm.v1.V5ChainConfig.dao_fork_block":
		return x.DaoForkBlock != ""
	case "os.evm.v1.V5ChainConfig.dao_fork_support":
		return x.DaoForkSupport != false
	case "os.evm.v1.V5ChainConfig.eip150_block":
		return x.Eip150Block != ""
	case "os.evm.v1.V5ChainConfig.eip150_hash":
		return x.Eip150Hash != ""
	case "os.evm.v1.V5ChainConfig.eip155_block":
		return x.Eip155Block != ""
	case "os.evm.v1.V5ChainConfig.eip158_block":
		return x.Eip158Block != ""
	case "os.evm.v1.V5ChainConfig.byzantium_block":
		return x.ByzantiumBlock != ""
	case "os.evm.v1.V5ChainConfig.constantinople_block":
		return x.ConstantinopleBlock != ""
	case "os.evm.v1.V5ChainConfig.petersburg_block":
		return x.PetersburgBlock != ""
	case "os.evm.v1.V5ChainConfig.istanbul_block":
		return x.IstanbulBlock != ""
	case "os.evm.v1.V5ChainConfig.muir_glacier_block":
		return x.MuirGlacierBlock != ""
	case "os.evm.v1.V5ChainConfig.berlin_block":
		return x.BerlinBlock != ""
	case "os.evm.v1.V5ChainConfig.london_block":
		return x.LondonBlock != ""
	case "os.evm.v1.V5ChainConfig.arrow_glacier_block":
		return x.ArrowGlacierBlock != ""
	case "os.evm.v1.V5ChainConfig.gray_glacier_block":
		return x.GrayGlacierBlock != ""
	case "os.evm.v1.V5ChainConfig.merge_netsplit_block":
		return x.MergeNetsplitBlock != ""
	case "os.evm.v1.V5ChainConfig.shanghai_block":
		return x.ShanghaiBlock != ""
	case "os.evm.v1.V5ChainConfig.cancun_block":
		return x.CancunBlock != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5ChainConfig"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5ChainConfig does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5ChainConfig) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "os.evm.v1.V5ChainConfig.homestead_block":
		x.HomesteadBlock = ""
	case "os.evm.v1.V5ChainConfig.dao_fork_block":
		x.DaoForkBlock = ""
	case "os.evm.v1.V5ChainConfig.dao_fork_support":
		x.DaoForkSupport = false
	case "os.evm.v1.V5ChainConfig.eip150_block":
		x.Eip150Block = ""
	case "os.evm.v1.V5ChainConfig.eip150_hash":
		x.Eip150Hash = ""
	case "os.evm.v1.V5ChainConfig.eip155_block":
		x.Eip155Block = ""
	case "os.evm.v1.V5ChainConfig.eip158_block":
		x.Eip158Block = ""
	case "os.evm.v1.V5ChainConfig.byzantium_block":
		x.ByzantiumBlock = ""
	case "os.evm.v1.V5ChainConfig.constantinople_block":
		x.ConstantinopleBlock = ""
	case "os.evm.v1.V5ChainConfig.petersburg_block":
		x.PetersburgBlock = ""
	case "os.evm.v1.V5ChainConfig.istanbul_block":
		x.IstanbulBlock = ""
	case "os.evm.v1.V5ChainConfig.muir_glacier_block":
		x.MuirGlacierBlock = ""
	case "os.evm.v1.V5ChainConfig.berlin_block":
		x.BerlinBlock = ""
	case "os.evm.v1.V5ChainConfig.london_block":
		x.LondonBlock = ""
	case "os.evm.v1.V5ChainConfig.arrow_glacier_block":
		x.ArrowGlacierBlock = ""
	case "os.evm.v1.V5ChainConfig.gray_glacier_block":
		x.GrayGlacierBlock = ""
	case "os.evm.v1.V5ChainConfig.merge_netsplit_block":
		x.MergeNetsplitBlock = ""
	case "os.evm.v1.V5ChainConfig.shanghai_block":
		x.ShanghaiBlock = ""
	case "os.evm.v1.V5ChainConfig.cancun_block":
		x.CancunBlock = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5ChainConfig"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5ChainConfig does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_V5ChainConfig) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "os.evm.v1.V5ChainConfig.homestead_block":
		value := x.HomesteadBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.dao_fork_block":
		value := x.DaoForkBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.dao_fork_support":
		value := x.DaoForkSupport
		return protoreflect.ValueOfBool(value)
	case "os.evm.v1.V5ChainConfig.eip150_block":
		value := x.Eip150Block
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.eip150_hash":
		value := x.Eip150Hash
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.eip155_block":
		value := x.Eip155Block
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.eip158_block":
		value := x.Eip158Block
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.byzantium_block":
		value := x.ByzantiumBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.constantinople_block":
		value := x.ConstantinopleBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.petersburg_block":
		value := x.PetersburgBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.istanbul_block":
		value := x.IstanbulBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.muir_glacier_block":
		value := x.MuirGlacierBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.berlin_block":
		value := x.BerlinBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.london_block":
		value := x.LondonBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.arrow_glacier_block":
		value := x.ArrowGlacierBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.gray_glacier_block":
		value := x.GrayGlacierBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.merge_netsplit_block":
		value := x.MergeNetsplitBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.shanghai_block":
		value := x.ShanghaiBlock
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5ChainConfig.cancun_block":
		value := x.CancunBlock
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5ChainConfig"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5ChainConfig does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5ChainConfig) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "os.evm.v1.V5ChainConfig.homestead_block":
		x.HomesteadBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.dao_fork_block":
		x.DaoForkBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.dao_fork_support":
		x.DaoForkSupport = value.Bool()
	case "os.evm.v1.V5ChainConfig.eip150_block":
		x.Eip150Block = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.eip150_hash":
		x.Eip150Hash = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.eip155_block":
		x.Eip155Block = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.eip158_block":
		x.Eip158Block = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.byzantium_block":
		x.ByzantiumBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.constantinople_block":
		x.ConstantinopleBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.petersburg_block":
		x.PetersburgBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.istanbul_block":
		x.IstanbulBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.muir_glacier_block":
		x.MuirGlacierBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.berlin_block":
		x.BerlinBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.london_block":
		x.LondonBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.arrow_glacier_block":
		x.ArrowGlacierBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.gray_glacier_block":
		x.GrayGlacierBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.merge_netsplit_block":
		x.MergeNetsplitBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.shanghai_block":
		x.ShanghaiBlock = value.Interface().(string)
	case "os.evm.v1.V5ChainConfig.cancun_block":
		x.CancunBlock = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5ChainConfig"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5ChainConfig does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5ChainConfig) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5ChainConfig.homestead_block":
		panic(fmt.Errorf("field homestead_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.dao_fork_block":
		panic(fmt.Errorf("field dao_fork_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.dao_fork_support":
		panic(fmt.Errorf("field dao_fork_support of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.eip150_block":
		panic(fmt.Errorf("field eip150_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.eip150_hash":
		panic(fmt.Errorf("field eip150_hash of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.eip155_block":
		panic(fmt.Errorf("field eip155_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.eip158_block":
		panic(fmt.Errorf("field eip158_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.byzantium_block":
		panic(fmt.Errorf("field byzantium_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.constantinople_block":
		panic(fmt.Errorf("field constantinople_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.petersburg_block":
		panic(fmt.Errorf("field petersburg_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.istanbul_block":
		panic(fmt.Errorf("field istanbul_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.muir_glacier_block":
		panic(fmt.Errorf("field muir_glacier_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.berlin_block":
		panic(fmt.Errorf("field berlin_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.london_block":
		panic(fmt.Errorf("field london_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.arrow_glacier_block":
		panic(fmt.Errorf("field arrow_glacier_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.gray_glacier_block":
		panic(fmt.Errorf("field gray_glacier_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.merge_netsplit_block":
		panic(fmt.Errorf("field merge_netsplit_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.shanghai_block":
		panic(fmt.Errorf("field shanghai_block of message os.evm.v1.V5ChainConfig is not mutable"))
	case "os.evm.v1.V5ChainConfig.cancun_block":
		panic(fmt.Errorf("field cancun_block of message os.evm.v1.V5ChainConfig is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5ChainConfig"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5ChainConfig does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_V5ChainConfig) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5ChainConfig.homestead_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.dao_fork_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.dao_fork_support":
		return protoreflect.ValueOfBool(false)
	case "os.evm.v1.V5ChainConfig.eip150_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.eip150_hash":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.eip155_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.eip158_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.byzantium_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.constantinople_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.petersburg_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.istanbul_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.muir_glacier_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.berlin_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.london_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.arrow_glacier_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.gray_glacier_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.merge_netsplit_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.shanghai_block":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5ChainConfig.cancun_block":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5ChainConfig"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5ChainConfig does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_V5ChainConfig) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in os.evm.v1.V5ChainConfig", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_V5ChainConfig) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5ChainConfig) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_V5ChainConfig) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_V5ChainConfig) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*V5ChainConfig)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.HomesteadBlock)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DaoForkBlock)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DaoForkSupport {
			n += 2
		}
		l = len(x.Eip150Block)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Eip150Hash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Eip155Block)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Eip158Block)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ByzantiumBlock)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ConstantinopleBlock)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PetersburgBlock)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.IstanbulBlock)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MuirGlacierBlock)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BerlinBlock)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LondonBlock)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ArrowGlacierBlock)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.GrayGlacierBlock)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MergeNetsplitBlock)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ShanghaiBlock)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CancunBlock)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*V5ChainConfig)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CancunBlock) > 0 {
			i -= len(x.CancunBlock)
			copy(dAtA[i:], x.CancunBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CancunBlock)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xba
		}
		if len(x.ShanghaiBlock) > 0 {
			i -= len(x.ShanghaiBlock)
			copy(dAtA[i:], x.ShanghaiBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ShanghaiBlock)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xb2
		}
		if len(x.MergeNetsplitBlock) > 0 {
			i -= len(x.MergeNetsplitBlock)
			copy(dAtA[i:], x.MergeNetsplitBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MergeNetsplitBlock)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xaa
		}
		if len(x.GrayGlacierBlock) > 0 {
			i -= len(x.GrayGlacierBlock)
			copy(dAtA[i:], x.GrayGlacierBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.GrayGlacierBlock)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa2
		}
		if len(x.ArrowGlacierBlock) > 0 {
			i -= len(x.ArrowGlacierBlock)
			copy(dAtA[i:], x.ArrowGlacierBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ArrowGlacierBlock)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x92
		}
		if len(x.LondonBlock) > 0 {
			i -= len(x.LondonBlock)
			copy(dAtA[i:], x.LondonBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LondonBlock)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x8a
		}
		if len(x.BerlinBlock) > 0 {
			i -= len(x.BerlinBlock)
			copy(dAtA[i:], x.BerlinBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BerlinBlock)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.MuirGlacierBlock) > 0 {
			i -= len(x.MuirGlacierBlock)
			copy(dAtA[i:], x.MuirGlacierBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MuirGlacierBlock)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.IstanbulBlock) > 0 {
			i -= len(x.IstanbulBlock)
			copy(dAtA[i:], x.IstanbulBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IstanbulBlock)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.PetersburgBlock) > 0 {
			i -= len(x.PetersburgBlock)
			copy(dAtA[i:], x.PetersburgBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PetersburgBlock)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.ConstantinopleBlock) > 0 {
			i -= len(x.ConstantinopleBlock)
			copy(dAtA[i:], x.ConstantinopleBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ConstantinopleBlock)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.ByzantiumBlock) > 0 {
			i -= len(x.ByzantiumBlock)
			copy(dAtA[i:], x.ByzantiumBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ByzantiumBlock)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.Eip158Block) > 0 {
			i -= len(x.Eip158Block)
			copy(dAtA[i:], x.Eip158Block)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Eip158Block)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.Eip155Block) > 0 {
			i -= len(x.Eip155Block)
			copy(dAtA[i:], x.Eip155Block)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Eip155Block)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Eip150Hash) > 0 {
			i -= len(x.Eip150Hash)
			copy(dAtA[i:], x.Eip150Hash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Eip150Hash)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Eip150Block) > 0 {
			i -= len(x.Eip150Block)
			copy(dAtA[i:], x.Eip150Block)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Eip150Block)))
			i--
			dAtA[i] = 0x22
		}
		if x.DaoForkSupport {
			i--
			if x.DaoForkSupport {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x18
		}
		if len(x.DaoForkBlock) > 0 {
			i -= len(x.DaoForkBlock)
			copy(dAtA[i:], x.DaoForkBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DaoForkBlock)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.HomesteadBlock) > 0 {
			i -= len(x.HomesteadBlock)
			copy(dAtA[i:], x.HomesteadBlock)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HomesteadBlock)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*V5ChainConfig)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5ChainConfig: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5ChainConfig: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HomesteadBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HomesteadBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DaoForkBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DaoForkBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DaoForkSupport", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.DaoForkSupport = bool(v != 0)
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Eip150Block", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Eip150Block = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Eip150Hash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Eip150Hash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Eip155Block", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Eip155Block = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Eip158Block", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Eip158Block = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ByzantiumBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ByzantiumBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ConstantinopleBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ConstantinopleBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PetersburgBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PetersburgBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IstanbulBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IstanbulBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MuirGlacierBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MuirGlacierBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BerlinBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BerlinBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 17:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LondonBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LondonBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 18:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ArrowGlacierBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ArrowGlacierBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 20:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GrayGlacierBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.GrayGlacierBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 21:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MergeNetsplitBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MergeNetsplitBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 22:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ShanghaiBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ShanghaiBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 23:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CancunBlock", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CancunBlock = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_V5State       protoreflect.MessageDescriptor
	fd_V5State_key   protoreflect.FieldDescriptor
	fd_V5State_value protoreflect.FieldDescriptor
)

func init() {
	file_os_evm_v1_legacy_params_v5_proto_init()
	md_V5State = File_os_evm_v1_legacy_params_v5_proto.Messages().ByName("V5State")
	fd_V5State_key = md_V5State.Fields().ByName("key")
	fd_V5State_value = md_V5State.Fields().ByName("value")
}

var _ protoreflect.Message = (*fastReflection_V5State)(nil)

type fastReflection_V5State V5State

func (x *V5State) ProtoReflect() protoreflect.Message {
	return (*fastReflection_V5State)(x)
}

func (x *V5State) slowProtoReflect() protoreflect.Message {
	mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_V5State_messageType fastReflection_V5State_messageType
var _ protoreflect.MessageType = fastReflection_V5State_messageType{}

type fastReflection_V5State_messageType struct{}

func (x fastReflection_V5State_messageType) Zero() protoreflect.Message {
	return (*fastReflection_V5State)(nil)
}
func (x fastReflection_V5State_messageType) New() protoreflect.Message {
	return new(fastReflection_V5State)
}
func (x fastReflection_V5State_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_V5State
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_V5State) Descriptor() protoreflect.MessageDescriptor {
	return md_V5State
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_V5State) Type() protoreflect.MessageType {
	return _fastReflection_V5State_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_V5State) New() protoreflect.Message {
	return new(fastReflection_V5State)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_V5State) Interface() protoreflect.ProtoMessage {
	return (*V5State)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_V5State) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Key != "" {
		value := protoreflect.ValueOfString(x.Key)
		if !f(fd_V5State_key, value) {
			return
		}
	}
	if x.Value != "" {
		value := protoreflect.ValueOfString(x.Value)
		if !f(fd_V5State_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_V5State) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "os.evm.v1.V5State.key":
		return x.Key != ""
	case "os.evm.v1.V5State.value":
		return x.Value != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5State"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5State does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5State) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "os.evm.v1.V5State.key":
		x.Key = ""
	case "os.evm.v1.V5State.value":
		x.Value = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5State"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5State does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_V5State) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "os.evm.v1.V5State.key":
		value := x.Key
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5State.value":
		value := x.Value
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5State"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5State does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5State) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "os.evm.v1.V5State.key":
		x.Key = value.Interface().(string)
	case "os.evm.v1.V5State.value":
		x.Value = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5State"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5State does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5State) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5State.key":
		panic(fmt.Errorf("field key of message os.evm.v1.V5State is not mutable"))
	case "os.evm.v1.V5State.value":
		panic(fmt.Errorf("field value of message os.evm.v1.V5State is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5State"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5State does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_V5State) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5State.key":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5State.value":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5State"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5State does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_V5State) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in os.evm.v1.V5State", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_V5State) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5State) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_V5State) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_V5State) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*V5State)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Key)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Value)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*V5State)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Value) > 0 {
			i -= len(x.Value)
			copy(dAtA[i:], x.Value)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Value)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Key) > 0 {
			i -= len(x.Key)
			copy(dAtA[i:], x.Key)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Key)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*V5State)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5State: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5State: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Key = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Value = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_V5TransactionLogs_2_list)(nil)

type _V5TransactionLogs_2_list struct {
	list *[]*V5Log
}

func (x *_V5TransactionLogs_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_V5TransactionLogs_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_V5TransactionLogs_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*V5Log)
	(*x.list)[i] = concreteValue
}

func (x *_V5TransactionLogs_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*V5Log)
	*x.list = append(*x.list, concreteValue)
}

func (x *_V5TransactionLogs_2_list) AppendMutable() protoreflect.Value {
	v := new(V5Log)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_V5TransactionLogs_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_V5TransactionLogs_2_list) NewElement() protoreflect.Value {
	v := new(V5Log)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_V5TransactionLogs_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_V5TransactionLogs      protoreflect.MessageDescriptor
	fd_V5TransactionLogs_hash protoreflect.FieldDescriptor
	fd_V5TransactionLogs_logs protoreflect.FieldDescriptor
)

func init() {
	file_os_evm_v1_legacy_params_v5_proto_init()
	md_V5TransactionLogs = File_os_evm_v1_legacy_params_v5_proto.Messages().ByName("V5TransactionLogs")
	fd_V5TransactionLogs_hash = md_V5TransactionLogs.Fields().ByName("hash")
	fd_V5TransactionLogs_logs = md_V5TransactionLogs.Fields().ByName("logs")
}

var _ protoreflect.Message = (*fastReflection_V5TransactionLogs)(nil)

type fastReflection_V5TransactionLogs V5TransactionLogs

func (x *V5TransactionLogs) ProtoReflect() protoreflect.Message {
	return (*fastReflection_V5TransactionLogs)(x)
}

func (x *V5TransactionLogs) slowProtoReflect() protoreflect.Message {
	mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_V5TransactionLogs_messageType fastReflection_V5TransactionLogs_messageType
var _ protoreflect.MessageType = fastReflection_V5TransactionLogs_messageType{}

type fastReflection_V5TransactionLogs_messageType struct{}

func (x fastReflection_V5TransactionLogs_messageType) Zero() protoreflect.Message {
	return (*fastReflection_V5TransactionLogs)(nil)
}
func (x fastReflection_V5TransactionLogs_messageType) New() protoreflect.Message {
	return new(fastReflection_V5TransactionLogs)
}
func (x fastReflection_V5TransactionLogs_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_V5TransactionLogs
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_V5TransactionLogs) Descriptor() protoreflect.MessageDescriptor {
	return md_V5TransactionLogs
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_V5TransactionLogs) Type() protoreflect.MessageType {
	return _fastReflection_V5TransactionLogs_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_V5TransactionLogs) New() protoreflect.Message {
	return new(fastReflection_V5TransactionLogs)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_V5TransactionLogs) Interface() protoreflect.ProtoMessage {
	return (*V5TransactionLogs)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_V5TransactionLogs) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Hash != "" {
		value := protoreflect.ValueOfString(x.Hash)
		if !f(fd_V5TransactionLogs_hash, value) {
			return
		}
	}
	if len(x.Logs) != 0 {
		value := protoreflect.ValueOfList(&_V5TransactionLogs_2_list{list: &x.Logs})
		if !f(fd_V5TransactionLogs_logs, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_V5TransactionLogs) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "os.evm.v1.V5TransactionLogs.hash":
		return x.Hash != ""
	case "os.evm.v1.V5TransactionLogs.logs":
		return len(x.Logs) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TransactionLogs"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TransactionLogs does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5TransactionLogs) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "os.evm.v1.V5TransactionLogs.hash":
		x.Hash = ""
	case "os.evm.v1.V5TransactionLogs.logs":
		x.Logs = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TransactionLogs"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TransactionLogs does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_V5TransactionLogs) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "os.evm.v1.V5TransactionLogs.hash":
		value := x.Hash
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5TransactionLogs.logs":
		if len(x.Logs) == 0 {
			return protoreflect.ValueOfList(&_V5TransactionLogs_2_list{})
		}
		listValue := &_V5TransactionLogs_2_list{list: &x.Logs}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TransactionLogs"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TransactionLogs does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5TransactionLogs) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "os.evm.v1.V5TransactionLogs.hash":
		x.Hash = value.Interface().(string)
	case "os.evm.v1.V5TransactionLogs.logs":
		lv := value.List()
		clv := lv.(*_V5TransactionLogs_2_list)
		x.Logs = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TransactionLogs"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TransactionLogs does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5TransactionLogs) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5TransactionLogs.logs":
		if x.Logs == nil {
			x.Logs = []*V5Log{}
		}
		value := &_V5TransactionLogs_2_list{list: &x.Logs}
		return protoreflect.ValueOfList(value)
	case "os.evm.v1.V5TransactionLogs.hash":
		panic(fmt.Errorf("field hash of message os.evm.v1.V5TransactionLogs is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TransactionLogs"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TransactionLogs does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_V5TransactionLogs) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5TransactionLogs.hash":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5TransactionLogs.logs":
		list := []*V5Log{}
		return protoreflect.ValueOfList(&_V5TransactionLogs_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TransactionLogs"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TransactionLogs does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_V5TransactionLogs) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in os.evm.v1.V5TransactionLogs", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_V5TransactionLogs) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5TransactionLogs) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_V5TransactionLogs) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_V5TransactionLogs) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*V5TransactionLogs)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Hash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Logs) > 0 {
			for _, e := range x.Logs {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*V5TransactionLogs)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Logs) > 0 {
			for iNdEx := len(x.Logs) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Logs[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Hash) > 0 {
			i -= len(x.Hash)
			copy(dAtA[i:], x.Hash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Hash)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*V5TransactionLogs)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5TransactionLogs: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5TransactionLogs: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Hash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Logs", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Logs = append(x.Logs, &V5Log{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Logs[len(x.Logs)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_V5Log_2_list)(nil)

type _V5Log_2_list struct {
	list *[]string
}

func (x *_V5Log_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_V5Log_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_V5Log_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_V5Log_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_V5Log_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message V5Log at list field Topics as it is not of Message kind"))
}

func (x *_V5Log_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_V5Log_2_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_V5Log_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_V5Log              protoreflect.MessageDescriptor
	fd_V5Log_address      protoreflect.FieldDescriptor
	fd_V5Log_topics       protoreflect.FieldDescriptor
	fd_V5Log_data         protoreflect.FieldDescriptor
	fd_V5Log_block_number protoreflect.FieldDescriptor
	fd_V5Log_tx_hash      protoreflect.FieldDescriptor
	fd_V5Log_tx_index     protoreflect.FieldDescriptor
	fd_V5Log_block_hash   protoreflect.FieldDescriptor
	fd_V5Log_index        protoreflect.FieldDescriptor
	fd_V5Log_removed      protoreflect.FieldDescriptor
)

func init() {
	file_os_evm_v1_legacy_params_v5_proto_init()
	md_V5Log = File_os_evm_v1_legacy_params_v5_proto.Messages().ByName("V5Log")
	fd_V5Log_address = md_V5Log.Fields().ByName("address")
	fd_V5Log_topics = md_V5Log.Fields().ByName("topics")
	fd_V5Log_data = md_V5Log.Fields().ByName("data")
	fd_V5Log_block_number = md_V5Log.Fields().ByName("block_number")
	fd_V5Log_tx_hash = md_V5Log.Fields().ByName("tx_hash")
	fd_V5Log_tx_index = md_V5Log.Fields().ByName("tx_index")
	fd_V5Log_block_hash = md_V5Log.Fields().ByName("block_hash")
	fd_V5Log_index = md_V5Log.Fields().ByName("index")
	fd_V5Log_removed = md_V5Log.Fields().ByName("removed")
}

var _ protoreflect.Message = (*fastReflection_V5Log)(nil)

type fastReflection_V5Log V5Log

func (x *V5Log) ProtoReflect() protoreflect.Message {
	return (*fastReflection_V5Log)(x)
}

func (x *V5Log) slowProtoReflect() protoreflect.Message {
	mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_V5Log_messageType fastReflection_V5Log_messageType
var _ protoreflect.MessageType = fastReflection_V5Log_messageType{}

type fastReflection_V5Log_messageType struct{}

func (x fastReflection_V5Log_messageType) Zero() protoreflect.Message {
	return (*fastReflection_V5Log)(nil)
}
func (x fastReflection_V5Log_messageType) New() protoreflect.Message {
	return new(fastReflection_V5Log)
}
func (x fastReflection_V5Log_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_V5Log
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_V5Log) Descriptor() protoreflect.MessageDescriptor {
	return md_V5Log
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_V5Log) Type() protoreflect.MessageType {
	return _fastReflection_V5Log_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_V5Log) New() protoreflect.Message {
	return new(fastReflection_V5Log)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_V5Log) Interface() protoreflect.ProtoMessage {
	return (*V5Log)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_V5Log) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_V5Log_address, value) {
			return
		}
	}
	if len(x.Topics) != 0 {
		value := protoreflect.ValueOfList(&_V5Log_2_list{list: &x.Topics})
		if !f(fd_V5Log_topics, value) {
			return
		}
	}
	if len(x.Data) != 0 {
		value := protoreflect.ValueOfBytes(x.Data)
		if !f(fd_V5Log_data, value) {
			return
		}
	}
	if x.BlockNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockNumber)
		if !f(fd_V5Log_block_number, value) {
			return
		}
	}
	if x.TxHash != "" {
		value := protoreflect.ValueOfString(x.TxHash)
		if !f(fd_V5Log_tx_hash, value) {
			return
		}
	}
	if x.TxIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TxIndex)
		if !f(fd_V5Log_tx_index, value) {
			return
		}
	}
	if x.BlockHash != "" {
		value := protoreflect.ValueOfString(x.BlockHash)
		if !f(fd_V5Log_block_hash, value) {
			return
		}
	}
	if x.Index != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Index)
		if !f(fd_V5Log_index, value) {
			return
		}
	}
	if x.Removed != false {
		value := protoreflect.ValueOfBool(x.Removed)
		if !f(fd_V5Log_removed, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_V5Log) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "os.evm.v1.V5Log.address":
		return x.Address != ""
	case "os.evm.v1.V5Log.topics":
		return len(x.Topics) != 0
	case "os.evm.v1.V5Log.data":
		return len(x.Data) != 0
	case "os.evm.v1.V5Log.block_number":
		return x.BlockNumber != uint64(0)
	case "os.evm.v1.V5Log.tx_hash":
		return x.TxHash != ""
	case "os.evm.v1.V5Log.tx_index":
		return x.TxIndex != uint64(0)
	case "os.evm.v1.V5Log.block_hash":
		return x.BlockHash != ""
	case "os.evm.v1.V5Log.index":
		return x.Index != uint64(0)
	case "os.evm.v1.V5Log.removed":
		return x.Removed != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5Log"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5Log does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5Log) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "os.evm.v1.V5Log.address":
		x.Address = ""
	case "os.evm.v1.V5Log.topics":
		x.Topics = nil
	case "os.evm.v1.V5Log.data":
		x.Data = nil
	case "os.evm.v1.V5Log.block_number":
		x.BlockNumber = uint64(0)
	case "os.evm.v1.V5Log.tx_hash":
		x.TxHash = ""
	case "os.evm.v1.V5Log.tx_index":
		x.TxIndex = uint64(0)
	case "os.evm.v1.V5Log.block_hash":
		x.BlockHash = ""
	case "os.evm.v1.V5Log.index":
		x.Index = uint64(0)
	case "os.evm.v1.V5Log.removed":
		x.Removed = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5Log"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5Log does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_V5Log) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "os.evm.v1.V5Log.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5Log.topics":
		if len(x.Topics) == 0 {
			return protoreflect.ValueOfList(&_V5Log_2_list{})
		}
		listValue := &_V5Log_2_list{list: &x.Topics}
		return protoreflect.ValueOfList(listValue)
	case "os.evm.v1.V5Log.data":
		value := x.Data
		return protoreflect.ValueOfBytes(value)
	case "os.evm.v1.V5Log.block_number":
		value := x.BlockNumber
		return protoreflect.ValueOfUint64(value)
	case "os.evm.v1.V5Log.tx_hash":
		value := x.TxHash
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5Log.tx_index":
		value := x.TxIndex
		return protoreflect.ValueOfUint64(value)
	case "os.evm.v1.V5Log.block_hash":
		value := x.BlockHash
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5Log.index":
		value := x.Index
		return protoreflect.ValueOfUint64(value)
	case "os.evm.v1.V5Log.removed":
		value := x.Removed
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5Log"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5Log does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5Log) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "os.evm.v1.V5Log.address":
		x.Address = value.Interface().(string)
	case "os.evm.v1.V5Log.topics":
		lv := value.List()
		clv := lv.(*_V5Log_2_list)
		x.Topics = *clv.list
	case "os.evm.v1.V5Log.data":
		x.Data = value.Bytes()
	case "os.evm.v1.V5Log.block_number":
		x.BlockNumber = value.Uint()
	case "os.evm.v1.V5Log.tx_hash":
		x.TxHash = value.Interface().(string)
	case "os.evm.v1.V5Log.tx_index":
		x.TxIndex = value.Uint()
	case "os.evm.v1.V5Log.block_hash":
		x.BlockHash = value.Interface().(string)
	case "os.evm.v1.V5Log.index":
		x.Index = value.Uint()
	case "os.evm.v1.V5Log.removed":
		x.Removed = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5Log"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5Log does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5Log) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5Log.topics":
		if x.Topics == nil {
			x.Topics = []string{}
		}
		value := &_V5Log_2_list{list: &x.Topics}
		return protoreflect.ValueOfList(value)
	case "os.evm.v1.V5Log.address":
		panic(fmt.Errorf("field address of message os.evm.v1.V5Log is not mutable"))
	case "os.evm.v1.V5Log.data":
		panic(fmt.Errorf("field data of message os.evm.v1.V5Log is not mutable"))
	case "os.evm.v1.V5Log.block_number":
		panic(fmt.Errorf("field block_number of message os.evm.v1.V5Log is not mutable"))
	case "os.evm.v1.V5Log.tx_hash":
		panic(fmt.Errorf("field tx_hash of message os.evm.v1.V5Log is not mutable"))
	case "os.evm.v1.V5Log.tx_index":
		panic(fmt.Errorf("field tx_index of message os.evm.v1.V5Log is not mutable"))
	case "os.evm.v1.V5Log.block_hash":
		panic(fmt.Errorf("field block_hash of message os.evm.v1.V5Log is not mutable"))
	case "os.evm.v1.V5Log.index":
		panic(fmt.Errorf("field index of message os.evm.v1.V5Log is not mutable"))
	case "os.evm.v1.V5Log.removed":
		panic(fmt.Errorf("field removed of message os.evm.v1.V5Log is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5Log"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5Log does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_V5Log) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5Log.address":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5Log.topics":
		list := []string{}
		return protoreflect.ValueOfList(&_V5Log_2_list{list: &list})
	case "os.evm.v1.V5Log.data":
		return protoreflect.ValueOfBytes(nil)
	case "os.evm.v1.V5Log.block_number":
		return protoreflect.ValueOfUint64(uint64(0))
	case "os.evm.v1.V5Log.tx_hash":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5Log.tx_index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "os.evm.v1.V5Log.block_hash":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5Log.index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "os.evm.v1.V5Log.removed":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5Log"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5Log does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_V5Log) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in os.evm.v1.V5Log", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_V5Log) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5Log) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_V5Log) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_V5Log) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*V5Log)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Topics) > 0 {
			for _, s := range x.Topics {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Data)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockNumber))
		}
		l = len(x.TxHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TxIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.TxIndex))
		}
		l = len(x.BlockHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Index != 0 {
			n += 1 + runtime.Sov(uint64(x.Index))
		}
		if x.Removed {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*V5Log)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Removed {
			i--
			if x.Removed {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x48
		}
		if x.Index != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Index))
			i--
			dAtA[i] = 0x40
		}
		if len(x.BlockHash) > 0 {
			i -= len(x.BlockHash)
			copy(dAtA[i:], x.BlockHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BlockHash)))
			i--
			dAtA[i] = 0x3a
		}
		if x.TxIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TxIndex))
			i--
			dAtA[i] = 0x30
		}
		if len(x.TxHash) > 0 {
			i -= len(x.TxHash)
			copy(dAtA[i:], x.TxHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxHash)))
			i--
			dAtA[i] = 0x2a
		}
		if x.BlockNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockNumber))
			i--
			dAtA[i] = 0x20
		}
		if len(x.Data) > 0 {
			i -= len(x.Data)
			copy(dAtA[i:], x.Data)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Data)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Topics) > 0 {
			for iNdEx := len(x.Topics) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Topics[iNdEx])
				copy(dAtA[i:], x.Topics[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Topics[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*V5Log)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5Log: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5Log: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Topics", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Topics = append(x.Topics, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Data = append(x.Data[:0], dAtA[iNdEx:postIndex]...)
				if x.Data == nil {
					x.Data = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockNumber", wireType)
				}
				x.BlockNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxIndex", wireType)
				}
				x.TxIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TxIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BlockHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
				}
				x.Index = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Index |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Removed", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Removed = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_V5TxResult                  protoreflect.MessageDescriptor
	fd_V5TxResult_contract_address protoreflect.FieldDescriptor
	fd_V5TxResult_bloom            protoreflect.FieldDescriptor
	fd_V5TxResult_tx_logs          protoreflect.FieldDescriptor
	fd_V5TxResult_ret              protoreflect.FieldDescriptor
	fd_V5TxResult_reverted         protoreflect.FieldDescriptor
	fd_V5TxResult_gas_used         protoreflect.FieldDescriptor
)

func init() {
	file_os_evm_v1_legacy_params_v5_proto_init()
	md_V5TxResult = File_os_evm_v1_legacy_params_v5_proto.Messages().ByName("V5TxResult")
	fd_V5TxResult_contract_address = md_V5TxResult.Fields().ByName("contract_address")
	fd_V5TxResult_bloom = md_V5TxResult.Fields().ByName("bloom")
	fd_V5TxResult_tx_logs = md_V5TxResult.Fields().ByName("tx_logs")
	fd_V5TxResult_ret = md_V5TxResult.Fields().ByName("ret")
	fd_V5TxResult_reverted = md_V5TxResult.Fields().ByName("reverted")
	fd_V5TxResult_gas_used = md_V5TxResult.Fields().ByName("gas_used")
}

var _ protoreflect.Message = (*fastReflection_V5TxResult)(nil)

type fastReflection_V5TxResult V5TxResult

func (x *V5TxResult) ProtoReflect() protoreflect.Message {
	return (*fastReflection_V5TxResult)(x)
}

func (x *V5TxResult) slowProtoReflect() protoreflect.Message {
	mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_V5TxResult_messageType fastReflection_V5TxResult_messageType
var _ protoreflect.MessageType = fastReflection_V5TxResult_messageType{}

type fastReflection_V5TxResult_messageType struct{}

func (x fastReflection_V5TxResult_messageType) Zero() protoreflect.Message {
	return (*fastReflection_V5TxResult)(nil)
}
func (x fastReflection_V5TxResult_messageType) New() protoreflect.Message {
	return new(fastReflection_V5TxResult)
}
func (x fastReflection_V5TxResult_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_V5TxResult
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_V5TxResult) Descriptor() protoreflect.MessageDescriptor {
	return md_V5TxResult
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_V5TxResult) Type() protoreflect.MessageType {
	return _fastReflection_V5TxResult_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_V5TxResult) New() protoreflect.Message {
	return new(fastReflection_V5TxResult)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_V5TxResult) Interface() protoreflect.ProtoMessage {
	return (*V5TxResult)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_V5TxResult) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ContractAddress != "" {
		value := protoreflect.ValueOfString(x.ContractAddress)
		if !f(fd_V5TxResult_contract_address, value) {
			return
		}
	}
	if len(x.Bloom) != 0 {
		value := protoreflect.ValueOfBytes(x.Bloom)
		if !f(fd_V5TxResult_bloom, value) {
			return
		}
	}
	if x.TxLogs != nil {
		value := protoreflect.ValueOfMessage(x.TxLogs.ProtoReflect())
		if !f(fd_V5TxResult_tx_logs, value) {
			return
		}
	}
	if len(x.Ret) != 0 {
		value := protoreflect.ValueOfBytes(x.Ret)
		if !f(fd_V5TxResult_ret, value) {
			return
		}
	}
	if x.Reverted != false {
		value := protoreflect.ValueOfBool(x.Reverted)
		if !f(fd_V5TxResult_reverted, value) {
			return
		}
	}
	if x.GasUsed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.GasUsed)
		if !f(fd_V5TxResult_gas_used, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_V5TxResult) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "os.evm.v1.V5TxResult.contract_address":
		return x.ContractAddress != ""
	case "os.evm.v1.V5TxResult.bloom":
		return len(x.Bloom) != 0
	case "os.evm.v1.V5TxResult.tx_logs":
		return x.TxLogs != nil
	case "os.evm.v1.V5TxResult.ret":
		return len(x.Ret) != 0
	case "os.evm.v1.V5TxResult.reverted":
		return x.Reverted != false
	case "os.evm.v1.V5TxResult.gas_used":
		return x.GasUsed != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TxResult"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TxResult does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5TxResult) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "os.evm.v1.V5TxResult.contract_address":
		x.ContractAddress = ""
	case "os.evm.v1.V5TxResult.bloom":
		x.Bloom = nil
	case "os.evm.v1.V5TxResult.tx_logs":
		x.TxLogs = nil
	case "os.evm.v1.V5TxResult.ret":
		x.Ret = nil
	case "os.evm.v1.V5TxResult.reverted":
		x.Reverted = false
	case "os.evm.v1.V5TxResult.gas_used":
		x.GasUsed = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TxResult"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TxResult does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_V5TxResult) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "os.evm.v1.V5TxResult.contract_address":
		value := x.ContractAddress
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5TxResult.bloom":
		value := x.Bloom
		return protoreflect.ValueOfBytes(value)
	case "os.evm.v1.V5TxResult.tx_logs":
		value := x.TxLogs
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "os.evm.v1.V5TxResult.ret":
		value := x.Ret
		return protoreflect.ValueOfBytes(value)
	case "os.evm.v1.V5TxResult.reverted":
		value := x.Reverted
		return protoreflect.ValueOfBool(value)
	case "os.evm.v1.V5TxResult.gas_used":
		value := x.GasUsed
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TxResult"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TxResult does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5TxResult) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "os.evm.v1.V5TxResult.contract_address":
		x.ContractAddress = value.Interface().(string)
	case "os.evm.v1.V5TxResult.bloom":
		x.Bloom = value.Bytes()
	case "os.evm.v1.V5TxResult.tx_logs":
		x.TxLogs = value.Message().Interface().(*V5TransactionLogs)
	case "os.evm.v1.V5TxResult.ret":
		x.Ret = value.Bytes()
	case "os.evm.v1.V5TxResult.reverted":
		x.Reverted = value.Bool()
	case "os.evm.v1.V5TxResult.gas_used":
		x.GasUsed = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TxResult"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TxResult does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5TxResult) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5TxResult.tx_logs":
		if x.TxLogs == nil {
			x.TxLogs = new(V5TransactionLogs)
		}
		return protoreflect.ValueOfMessage(x.TxLogs.ProtoReflect())
	case "os.evm.v1.V5TxResult.contract_address":
		panic(fmt.Errorf("field contract_address of message os.evm.v1.V5TxResult is not mutable"))
	case "os.evm.v1.V5TxResult.bloom":
		panic(fmt.Errorf("field bloom of message os.evm.v1.V5TxResult is not mutable"))
	case "os.evm.v1.V5TxResult.ret":
		panic(fmt.Errorf("field ret of message os.evm.v1.V5TxResult is not mutable"))
	case "os.evm.v1.V5TxResult.reverted":
		panic(fmt.Errorf("field reverted of message os.evm.v1.V5TxResult is not mutable"))
	case "os.evm.v1.V5TxResult.gas_used":
		panic(fmt.Errorf("field gas_used of message os.evm.v1.V5TxResult is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TxResult"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TxResult does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_V5TxResult) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5TxResult.contract_address":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5TxResult.bloom":
		return protoreflect.ValueOfBytes(nil)
	case "os.evm.v1.V5TxResult.tx_logs":
		m := new(V5TransactionLogs)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "os.evm.v1.V5TxResult.ret":
		return protoreflect.ValueOfBytes(nil)
	case "os.evm.v1.V5TxResult.reverted":
		return protoreflect.ValueOfBool(false)
	case "os.evm.v1.V5TxResult.gas_used":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TxResult"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TxResult does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_V5TxResult) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in os.evm.v1.V5TxResult", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_V5TxResult) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5TxResult) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_V5TxResult) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_V5TxResult) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*V5TxResult)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ContractAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Bloom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TxLogs != nil {
			l = options.Size(x.TxLogs)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Ret)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Reverted {
			n += 2
		}
		if x.GasUsed != 0 {
			n += 1 + runtime.Sov(uint64(x.GasUsed))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*V5TxResult)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.GasUsed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.GasUsed))
			i--
			dAtA[i] = 0x30
		}
		if x.Reverted {
			i--
			if x.Reverted {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x28
		}
		if len(x.Ret) > 0 {
			i -= len(x.Ret)
			copy(dAtA[i:], x.Ret)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Ret)))
			i--
			dAtA[i] = 0x22
		}
		if x.TxLogs != nil {
			encoded, err := options.Marshal(x.TxLogs)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Bloom) > 0 {
			i -= len(x.Bloom)
			copy(dAtA[i:], x.Bloom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Bloom)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ContractAddress) > 0 {
			i -= len(x.ContractAddress)
			copy(dAtA[i:], x.ContractAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ContractAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*V5TxResult)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5TxResult: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5TxResult: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ContractAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ContractAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Bloom", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Bloom = append(x.Bloom[:0], dAtA[iNdEx:postIndex]...)
				if x.Bloom == nil {
					x.Bloom = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxLogs", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TxLogs == nil {
					x.TxLogs = &V5TransactionLogs{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TxLogs); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Ret", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Ret = append(x.Ret[:0], dAtA[iNdEx:postIndex]...)
				if x.Ret == nil {
					x.Ret = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reverted", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Reverted = bool(v != 0)
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasUsed", wireType)
				}
				x.GasUsed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.GasUsed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_V5AccessTuple_2_list)(nil)

type _V5AccessTuple_2_list struct {
	list *[]string
}

func (x *_V5AccessTuple_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_V5AccessTuple_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_V5AccessTuple_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_V5AccessTuple_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_V5AccessTuple_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message V5AccessTuple at list field StorageKeys as it is not of Message kind"))
}

func (x *_V5AccessTuple_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_V5AccessTuple_2_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_V5AccessTuple_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_V5AccessTuple              protoreflect.MessageDescriptor
	fd_V5AccessTuple_address      protoreflect.FieldDescriptor
	fd_V5AccessTuple_storage_keys protoreflect.FieldDescriptor
)

func init() {
	file_os_evm_v1_legacy_params_v5_proto_init()
	md_V5AccessTuple = File_os_evm_v1_legacy_params_v5_proto.Messages().ByName("V5AccessTuple")
	fd_V5AccessTuple_address = md_V5AccessTuple.Fields().ByName("address")
	fd_V5AccessTuple_storage_keys = md_V5AccessTuple.Fields().ByName("storage_keys")
}

var _ protoreflect.Message = (*fastReflection_V5AccessTuple)(nil)

type fastReflection_V5AccessTuple V5AccessTuple

func (x *V5AccessTuple) ProtoReflect() protoreflect.Message {
	return (*fastReflection_V5AccessTuple)(x)
}

func (x *V5AccessTuple) slowProtoReflect() protoreflect.Message {
	mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_V5AccessTuple_messageType fastReflection_V5AccessTuple_messageType
var _ protoreflect.MessageType = fastReflection_V5AccessTuple_messageType{}

type fastReflection_V5AccessTuple_messageType struct{}

func (x fastReflection_V5AccessTuple_messageType) Zero() protoreflect.Message {
	return (*fastReflection_V5AccessTuple)(nil)
}
func (x fastReflection_V5AccessTuple_messageType) New() protoreflect.Message {
	return new(fastReflection_V5AccessTuple)
}
func (x fastReflection_V5AccessTuple_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_V5AccessTuple
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_V5AccessTuple) Descriptor() protoreflect.MessageDescriptor {
	return md_V5AccessTuple
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_V5AccessTuple) Type() protoreflect.MessageType {
	return _fastReflection_V5AccessTuple_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_V5AccessTuple) New() protoreflect.Message {
	return new(fastReflection_V5AccessTuple)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_V5AccessTuple) Interface() protoreflect.ProtoMessage {
	return (*V5AccessTuple)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_V5AccessTuple) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_V5AccessTuple_address, value) {
			return
		}
	}
	if len(x.StorageKeys) != 0 {
		value := protoreflect.ValueOfList(&_V5AccessTuple_2_list{list: &x.StorageKeys})
		if !f(fd_V5AccessTuple_storage_keys, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_V5AccessTuple) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "os.evm.v1.V5AccessTuple.address":
		return x.Address != ""
	case "os.evm.v1.V5AccessTuple.storage_keys":
		return len(x.StorageKeys) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5AccessTuple"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5AccessTuple does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5AccessTuple) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "os.evm.v1.V5AccessTuple.address":
		x.Address = ""
	case "os.evm.v1.V5AccessTuple.storage_keys":
		x.StorageKeys = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5AccessTuple"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5AccessTuple does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_V5AccessTuple) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "os.evm.v1.V5AccessTuple.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5AccessTuple.storage_keys":
		if len(x.StorageKeys) == 0 {
			return protoreflect.ValueOfList(&_V5AccessTuple_2_list{})
		}
		listValue := &_V5AccessTuple_2_list{list: &x.StorageKeys}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5AccessTuple"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5AccessTuple does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5AccessTuple) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "os.evm.v1.V5AccessTuple.address":
		x.Address = value.Interface().(string)
	case "os.evm.v1.V5AccessTuple.storage_keys":
		lv := value.List()
		clv := lv.(*_V5AccessTuple_2_list)
		x.StorageKeys = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5AccessTuple"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5AccessTuple does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5AccessTuple) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5AccessTuple.storage_keys":
		if x.StorageKeys == nil {
			x.StorageKeys = []string{}
		}
		value := &_V5AccessTuple_2_list{list: &x.StorageKeys}
		return protoreflect.ValueOfList(value)
	case "os.evm.v1.V5AccessTuple.address":
		panic(fmt.Errorf("field address of message os.evm.v1.V5AccessTuple is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5AccessTuple"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5AccessTuple does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_V5AccessTuple) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5AccessTuple.address":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5AccessTuple.storage_keys":
		list := []string{}
		return protoreflect.ValueOfList(&_V5AccessTuple_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5AccessTuple"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5AccessTuple does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_V5AccessTuple) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in os.evm.v1.V5AccessTuple", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_V5AccessTuple) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5AccessTuple) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_V5AccessTuple) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_V5AccessTuple) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*V5AccessTuple)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.StorageKeys) > 0 {
			for _, s := range x.StorageKeys {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*V5AccessTuple)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.StorageKeys) > 0 {
			for iNdEx := len(x.StorageKeys) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.StorageKeys[iNdEx])
				copy(dAtA[i:], x.StorageKeys[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StorageKeys[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*V5AccessTuple)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5AccessTuple: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5AccessTuple: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StorageKeys", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StorageKeys = append(x.StorageKeys, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_V5TraceConfig                    protoreflect.MessageDescriptor
	fd_V5TraceConfig_tracer             protoreflect.FieldDescriptor
	fd_V5TraceConfig_timeout            protoreflect.FieldDescriptor
	fd_V5TraceConfig_reexec             protoreflect.FieldDescriptor
	fd_V5TraceConfig_disable_stack      protoreflect.FieldDescriptor
	fd_V5TraceConfig_disable_storage    protoreflect.FieldDescriptor
	fd_V5TraceConfig_debug              protoreflect.FieldDescriptor
	fd_V5TraceConfig_limit              protoreflect.FieldDescriptor
	fd_V5TraceConfig_overrides          protoreflect.FieldDescriptor
	fd_V5TraceConfig_enable_memory      protoreflect.FieldDescriptor
	fd_V5TraceConfig_enable_return_data protoreflect.FieldDescriptor
	fd_V5TraceConfig_tracer_json_config protoreflect.FieldDescriptor
)

func init() {
	file_os_evm_v1_legacy_params_v5_proto_init()
	md_V5TraceConfig = File_os_evm_v1_legacy_params_v5_proto.Messages().ByName("V5TraceConfig")
	fd_V5TraceConfig_tracer = md_V5TraceConfig.Fields().ByName("tracer")
	fd_V5TraceConfig_timeout = md_V5TraceConfig.Fields().ByName("timeout")
	fd_V5TraceConfig_reexec = md_V5TraceConfig.Fields().ByName("reexec")
	fd_V5TraceConfig_disable_stack = md_V5TraceConfig.Fields().ByName("disable_stack")
	fd_V5TraceConfig_disable_storage = md_V5TraceConfig.Fields().ByName("disable_storage")
	fd_V5TraceConfig_debug = md_V5TraceConfig.Fields().ByName("debug")
	fd_V5TraceConfig_limit = md_V5TraceConfig.Fields().ByName("limit")
	fd_V5TraceConfig_overrides = md_V5TraceConfig.Fields().ByName("overrides")
	fd_V5TraceConfig_enable_memory = md_V5TraceConfig.Fields().ByName("enable_memory")
	fd_V5TraceConfig_enable_return_data = md_V5TraceConfig.Fields().ByName("enable_return_data")
	fd_V5TraceConfig_tracer_json_config = md_V5TraceConfig.Fields().ByName("tracer_json_config")
}

var _ protoreflect.Message = (*fastReflection_V5TraceConfig)(nil)

type fastReflection_V5TraceConfig V5TraceConfig

func (x *V5TraceConfig) ProtoReflect() protoreflect.Message {
	return (*fastReflection_V5TraceConfig)(x)
}

func (x *V5TraceConfig) slowProtoReflect() protoreflect.Message {
	mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_V5TraceConfig_messageType fastReflection_V5TraceConfig_messageType
var _ protoreflect.MessageType = fastReflection_V5TraceConfig_messageType{}

type fastReflection_V5TraceConfig_messageType struct{}

func (x fastReflection_V5TraceConfig_messageType) Zero() protoreflect.Message {
	return (*fastReflection_V5TraceConfig)(nil)
}
func (x fastReflection_V5TraceConfig_messageType) New() protoreflect.Message {
	return new(fastReflection_V5TraceConfig)
}
func (x fastReflection_V5TraceConfig_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_V5TraceConfig
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_V5TraceConfig) Descriptor() protoreflect.MessageDescriptor {
	return md_V5TraceConfig
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_V5TraceConfig) Type() protoreflect.MessageType {
	return _fastReflection_V5TraceConfig_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_V5TraceConfig) New() protoreflect.Message {
	return new(fastReflection_V5TraceConfig)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_V5TraceConfig) Interface() protoreflect.ProtoMessage {
	return (*V5TraceConfig)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_V5TraceConfig) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Tracer != "" {
		value := protoreflect.ValueOfString(x.Tracer)
		if !f(fd_V5TraceConfig_tracer, value) {
			return
		}
	}
	if x.Timeout != "" {
		value := protoreflect.ValueOfString(x.Timeout)
		if !f(fd_V5TraceConfig_timeout, value) {
			return
		}
	}
	if x.Reexec != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Reexec)
		if !f(fd_V5TraceConfig_reexec, value) {
			return
		}
	}
	if x.DisableStack != false {
		value := protoreflect.ValueOfBool(x.DisableStack)
		if !f(fd_V5TraceConfig_disable_stack, value) {
			return
		}
	}
	if x.DisableStorage != false {
		value := protoreflect.ValueOfBool(x.DisableStorage)
		if !f(fd_V5TraceConfig_disable_storage, value) {
			return
		}
	}
	if x.Debug != false {
		value := protoreflect.ValueOfBool(x.Debug)
		if !f(fd_V5TraceConfig_debug, value) {
			return
		}
	}
	if x.Limit != int32(0) {
		value := protoreflect.ValueOfInt32(x.Limit)
		if !f(fd_V5TraceConfig_limit, value) {
			return
		}
	}
	if x.Overrides != nil {
		value := protoreflect.ValueOfMessage(x.Overrides.ProtoReflect())
		if !f(fd_V5TraceConfig_overrides, value) {
			return
		}
	}
	if x.EnableMemory != false {
		value := protoreflect.ValueOfBool(x.EnableMemory)
		if !f(fd_V5TraceConfig_enable_memory, value) {
			return
		}
	}
	if x.EnableReturnData != false {
		value := protoreflect.ValueOfBool(x.EnableReturnData)
		if !f(fd_V5TraceConfig_enable_return_data, value) {
			return
		}
	}
	if x.TracerJsonConfig != "" {
		value := protoreflect.ValueOfString(x.TracerJsonConfig)
		if !f(fd_V5TraceConfig_tracer_json_config, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_V5TraceConfig) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "os.evm.v1.V5TraceConfig.tracer":
		return x.Tracer != ""
	case "os.evm.v1.V5TraceConfig.timeout":
		return x.Timeout != ""
	case "os.evm.v1.V5TraceConfig.reexec":
		return x.Reexec != uint64(0)
	case "os.evm.v1.V5TraceConfig.disable_stack":
		return x.DisableStack != false
	case "os.evm.v1.V5TraceConfig.disable_storage":
		return x.DisableStorage != false
	case "os.evm.v1.V5TraceConfig.debug":
		return x.Debug != false
	case "os.evm.v1.V5TraceConfig.limit":
		return x.Limit != int32(0)
	case "os.evm.v1.V5TraceConfig.overrides":
		return x.Overrides != nil
	case "os.evm.v1.V5TraceConfig.enable_memory":
		return x.EnableMemory != false
	case "os.evm.v1.V5TraceConfig.enable_return_data":
		return x.EnableReturnData != false
	case "os.evm.v1.V5TraceConfig.tracer_json_config":
		return x.TracerJsonConfig != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TraceConfig"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TraceConfig does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5TraceConfig) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "os.evm.v1.V5TraceConfig.tracer":
		x.Tracer = ""
	case "os.evm.v1.V5TraceConfig.timeout":
		x.Timeout = ""
	case "os.evm.v1.V5TraceConfig.reexec":
		x.Reexec = uint64(0)
	case "os.evm.v1.V5TraceConfig.disable_stack":
		x.DisableStack = false
	case "os.evm.v1.V5TraceConfig.disable_storage":
		x.DisableStorage = false
	case "os.evm.v1.V5TraceConfig.debug":
		x.Debug = false
	case "os.evm.v1.V5TraceConfig.limit":
		x.Limit = int32(0)
	case "os.evm.v1.V5TraceConfig.overrides":
		x.Overrides = nil
	case "os.evm.v1.V5TraceConfig.enable_memory":
		x.EnableMemory = false
	case "os.evm.v1.V5TraceConfig.enable_return_data":
		x.EnableReturnData = false
	case "os.evm.v1.V5TraceConfig.tracer_json_config":
		x.TracerJsonConfig = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TraceConfig"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TraceConfig does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_V5TraceConfig) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "os.evm.v1.V5TraceConfig.tracer":
		value := x.Tracer
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5TraceConfig.timeout":
		value := x.Timeout
		return protoreflect.ValueOfString(value)
	case "os.evm.v1.V5TraceConfig.reexec":
		value := x.Reexec
		return protoreflect.ValueOfUint64(value)
	case "os.evm.v1.V5TraceConfig.disable_stack":
		value := x.DisableStack
		return protoreflect.ValueOfBool(value)
	case "os.evm.v1.V5TraceConfig.disable_storage":
		value := x.DisableStorage
		return protoreflect.ValueOfBool(value)
	case "os.evm.v1.V5TraceConfig.debug":
		value := x.Debug
		return protoreflect.ValueOfBool(value)
	case "os.evm.v1.V5TraceConfig.limit":
		value := x.Limit
		return protoreflect.ValueOfInt32(value)
	case "os.evm.v1.V5TraceConfig.overrides":
		value := x.Overrides
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "os.evm.v1.V5TraceConfig.enable_memory":
		value := x.EnableMemory
		return protoreflect.ValueOfBool(value)
	case "os.evm.v1.V5TraceConfig.enable_return_data":
		value := x.EnableReturnData
		return protoreflect.ValueOfBool(value)
	case "os.evm.v1.V5TraceConfig.tracer_json_config":
		value := x.TracerJsonConfig
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TraceConfig"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TraceConfig does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5TraceConfig) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "os.evm.v1.V5TraceConfig.tracer":
		x.Tracer = value.Interface().(string)
	case "os.evm.v1.V5TraceConfig.timeout":
		x.Timeout = value.Interface().(string)
	case "os.evm.v1.V5TraceConfig.reexec":
		x.Reexec = value.Uint()
	case "os.evm.v1.V5TraceConfig.disable_stack":
		x.DisableStack = value.Bool()
	case "os.evm.v1.V5TraceConfig.disable_storage":
		x.DisableStorage = value.Bool()
	case "os.evm.v1.V5TraceConfig.debug":
		x.Debug = value.Bool()
	case "os.evm.v1.V5TraceConfig.limit":
		x.Limit = int32(value.Int())
	case "os.evm.v1.V5TraceConfig.overrides":
		x.Overrides = value.Message().Interface().(*V5ChainConfig)
	case "os.evm.v1.V5TraceConfig.enable_memory":
		x.EnableMemory = value.Bool()
	case "os.evm.v1.V5TraceConfig.enable_return_data":
		x.EnableReturnData = value.Bool()
	case "os.evm.v1.V5TraceConfig.tracer_json_config":
		x.TracerJsonConfig = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TraceConfig"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TraceConfig does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5TraceConfig) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5TraceConfig.overrides":
		if x.Overrides == nil {
			x.Overrides = new(V5ChainConfig)
		}
		return protoreflect.ValueOfMessage(x.Overrides.ProtoReflect())
	case "os.evm.v1.V5TraceConfig.tracer":
		panic(fmt.Errorf("field tracer of message os.evm.v1.V5TraceConfig is not mutable"))
	case "os.evm.v1.V5TraceConfig.timeout":
		panic(fmt.Errorf("field timeout of message os.evm.v1.V5TraceConfig is not mutable"))
	case "os.evm.v1.V5TraceConfig.reexec":
		panic(fmt.Errorf("field reexec of message os.evm.v1.V5TraceConfig is not mutable"))
	case "os.evm.v1.V5TraceConfig.disable_stack":
		panic(fmt.Errorf("field disable_stack of message os.evm.v1.V5TraceConfig is not mutable"))
	case "os.evm.v1.V5TraceConfig.disable_storage":
		panic(fmt.Errorf("field disable_storage of message os.evm.v1.V5TraceConfig is not mutable"))
	case "os.evm.v1.V5TraceConfig.debug":
		panic(fmt.Errorf("field debug of message os.evm.v1.V5TraceConfig is not mutable"))
	case "os.evm.v1.V5TraceConfig.limit":
		panic(fmt.Errorf("field limit of message os.evm.v1.V5TraceConfig is not mutable"))
	case "os.evm.v1.V5TraceConfig.enable_memory":
		panic(fmt.Errorf("field enable_memory of message os.evm.v1.V5TraceConfig is not mutable"))
	case "os.evm.v1.V5TraceConfig.enable_return_data":
		panic(fmt.Errorf("field enable_return_data of message os.evm.v1.V5TraceConfig is not mutable"))
	case "os.evm.v1.V5TraceConfig.tracer_json_config":
		panic(fmt.Errorf("field tracer_json_config of message os.evm.v1.V5TraceConfig is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TraceConfig"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TraceConfig does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_V5TraceConfig) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "os.evm.v1.V5TraceConfig.tracer":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5TraceConfig.timeout":
		return protoreflect.ValueOfString("")
	case "os.evm.v1.V5TraceConfig.reexec":
		return protoreflect.ValueOfUint64(uint64(0))
	case "os.evm.v1.V5TraceConfig.disable_stack":
		return protoreflect.ValueOfBool(false)
	case "os.evm.v1.V5TraceConfig.disable_storage":
		return protoreflect.ValueOfBool(false)
	case "os.evm.v1.V5TraceConfig.debug":
		return protoreflect.ValueOfBool(false)
	case "os.evm.v1.V5TraceConfig.limit":
		return protoreflect.ValueOfInt32(int32(0))
	case "os.evm.v1.V5TraceConfig.overrides":
		m := new(V5ChainConfig)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "os.evm.v1.V5TraceConfig.enable_memory":
		return protoreflect.ValueOfBool(false)
	case "os.evm.v1.V5TraceConfig.enable_return_data":
		return protoreflect.ValueOfBool(false)
	case "os.evm.v1.V5TraceConfig.tracer_json_config":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: os.evm.v1.V5TraceConfig"))
		}
		panic(fmt.Errorf("message os.evm.v1.V5TraceConfig does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_V5TraceConfig) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in os.evm.v1.V5TraceConfig", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_V5TraceConfig) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_V5TraceConfig) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_V5TraceConfig) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_V5TraceConfig) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*V5TraceConfig)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Tracer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Timeout)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Reexec != 0 {
			n += 1 + runtime.Sov(uint64(x.Reexec))
		}
		if x.DisableStack {
			n += 2
		}
		if x.DisableStorage {
			n += 2
		}
		if x.Debug {
			n += 2
		}
		if x.Limit != 0 {
			n += 1 + runtime.Sov(uint64(x.Limit))
		}
		if x.Overrides != nil {
			l = options.Size(x.Overrides)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EnableMemory {
			n += 2
		}
		if x.EnableReturnData {
			n += 2
		}
		l = len(x.TracerJsonConfig)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*V5TraceConfig)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TracerJsonConfig) > 0 {
			i -= len(x.TracerJsonConfig)
			copy(dAtA[i:], x.TracerJsonConfig)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TracerJsonConfig)))
			i--
			dAtA[i] = 0x6a
		}
		if x.EnableReturnData {
			i--
			if x.EnableReturnData {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x60
		}
		if x.EnableMemory {
			i--
			if x.EnableMemory {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x58
		}
		if x.Overrides != nil {
			encoded, err := options.Marshal(x.Overrides)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x52
		}
		if x.Limit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Limit))
			i--
			dAtA[i] = 0x48
		}
		if x.Debug {
			i--
			if x.Debug {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x40
		}
		if x.DisableStorage {
			i--
			if x.DisableStorage {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x30
		}
		if x.DisableStack {
			i--
			if x.DisableStack {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x28
		}
		if x.Reexec != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Reexec))
			i--
			dAtA[i] = 0x18
		}
		if len(x.Timeout) > 0 {
			i -= len(x.Timeout)
			copy(dAtA[i:], x.Timeout)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Timeout)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Tracer) > 0 {
			i -= len(x.Tracer)
			copy(dAtA[i:], x.Tracer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Tracer)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*V5TraceConfig)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5TraceConfig: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: V5TraceConfig: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Tracer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Tracer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Timeout = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Reexec", wireType)
				}
				x.Reexec = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Reexec |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DisableStack", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.DisableStack = bool(v != 0)
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DisableStorage", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.DisableStorage = bool(v != 0)
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Debug", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Debug = bool(v != 0)
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
				}
				x.Limit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Limit |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Overrides", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Overrides == nil {
					x.Overrides = &V5ChainConfig{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Overrides); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnableMemory", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.EnableMemory = bool(v != 0)
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnableReturnData", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.EnableReturnData = bool(v != 0)
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TracerJsonConfig", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TracerJsonConfig = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: os/evm/v1/legacy_params_v5.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Params defines the EVM module parameters
type V5Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// evm_denom represents the token denomination used to run the EVM state
	// transitions.
	EvmDenom string `protobuf:"bytes,1,opt,name=evm_denom,json=evmDenom,proto3" json:"evm_denom,omitempty"`
	// enable_create toggles state transitions that use the vm.Create function
	EnableCreate bool `protobuf:"varint,2,opt,name=enable_create,json=enableCreate,proto3" json:"enable_create,omitempty"`
	// enable_call toggles state transitions that use the vm.Call function
	EnableCall bool `protobuf:"varint,3,opt,name=enable_call,json=enableCall,proto3" json:"enable_call,omitempty"`
	// extra_eips defines the additional EIPs for the vm.Config
	ExtraEips []int64 `protobuf:"varint,4,rep,packed,name=extra_eips,json=extraEips,proto3" json:"extra_eips,omitempty"`
	// chain_config defines the EVM chain configuration parameters
	ChainConfig *V5ChainConfig `protobuf:"bytes,5,opt,name=chain_config,json=chainConfig,proto3" json:"chain_config,omitempty"`
	// allow_unprotected_txs defines if replay-protected (i.e non EIP155
	// signed) transactions can be executed on the state machine.
	AllowUnprotectedTxs bool `protobuf:"varint,6,opt,name=allow_unprotected_txs,json=allowUnprotectedTxs,proto3" json:"allow_unprotected_txs,omitempty"`
}

func (x *V5Params) Reset() {
	*x = V5Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V5Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V5Params) ProtoMessage() {}

// Deprecated: Use V5Params.ProtoReflect.Descriptor instead.
func (*V5Params) Descriptor() ([]byte, []int) {
	return file_os_evm_v1_legacy_params_v5_proto_rawDescGZIP(), []int{0}
}

func (x *V5Params) GetEvmDenom() string {
	if x != nil {
		return x.EvmDenom
	}
	return ""
}

func (x *V5Params) GetEnableCreate() bool {
	if x != nil {
		return x.EnableCreate
	}
	return false
}

func (x *V5Params) GetEnableCall() bool {
	if x != nil {
		return x.EnableCall
	}
	return false
}

func (x *V5Params) GetExtraEips() []int64 {
	if x != nil {
		return x.ExtraEips
	}
	return nil
}

func (x *V5Params) GetChainConfig() *V5ChainConfig {
	if x != nil {
		return x.ChainConfig
	}
	return nil
}

func (x *V5Params) GetAllowUnprotectedTxs() bool {
	if x != nil {
		return x.AllowUnprotectedTxs
	}
	return false
}

// ChainConfig defines the Ethereum ChainConfig parameters using *sdk.Int values
// instead of *big.Int.
type V5ChainConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// homestead_block switch (nil no fork, 0 = already homestead)
	HomesteadBlock string `protobuf:"bytes,1,opt,name=homestead_block,json=homesteadBlock,proto3" json:"homestead_block,omitempty"`
	// dao_fork_block corresponds to TheDAO hard-fork switch block (nil no fork)
	DaoForkBlock string `protobuf:"bytes,2,opt,name=dao_fork_block,json=daoForkBlock,proto3" json:"dao_fork_block,omitempty"`
	// dao_fork_support defines whether the nodes supports or opposes the DAO hard-fork
	DaoForkSupport bool `protobuf:"varint,3,opt,name=dao_fork_support,json=daoForkSupport,proto3" json:"dao_fork_support,omitempty"`
	// eip150_block: EIP150 implements the Gas price changes
	// (https://github.com/ethereum/EIPs/issues/150) EIP150 HF block (nil no fork)
	Eip150Block string `protobuf:"bytes,4,opt,name=eip150_block,json=eip150Block,proto3" json:"eip150_block,omitempty"`
	// eip150_hash: EIP150 HF hash (needed for header only clients as only gas pricing changed)
	Eip150Hash string `protobuf:"bytes,5,opt,name=eip150_hash,json=eip150Hash,proto3" json:"eip150_hash,omitempty"`
	// eip155_block: EIP155Block HF block
	Eip155Block string `protobuf:"bytes,6,opt,name=eip155_block,json=eip155Block,proto3" json:"eip155_block,omitempty"`
	// eip158_block: EIP158 HF block
	Eip158Block string `protobuf:"bytes,7,opt,name=eip158_block,json=eip158Block,proto3" json:"eip158_block,omitempty"`
	// byzantium_block: Byzantium switch block (nil no fork, 0 = already on byzantium)
	ByzantiumBlock string `protobuf:"bytes,8,opt,name=byzantium_block,json=byzantiumBlock,proto3" json:"byzantium_block,omitempty"`
	// constantinople_block: Constantinople switch block (nil no fork, 0 = already activated)
	ConstantinopleBlock string `protobuf:"bytes,9,opt,name=constantinople_block,json=constantinopleBlock,proto3" json:"constantinople_block,omitempty"`
	// petersburg_block: Petersburg switch block (nil same as Constantinople)
	PetersburgBlock string `protobuf:"bytes,10,opt,name=petersburg_block,json=petersburgBlock,proto3" json:"petersburg_block,omitempty"`
	// istanbul_block: Istanbul switch block (nil no fork, 0 = already on istanbul)
	IstanbulBlock string `protobuf:"bytes,11,opt,name=istanbul_block,json=istanbulBlock,proto3" json:"istanbul_block,omitempty"`
	// muir_glacier_block: Eip-2384 (bomb delay) switch block (nil no fork, 0 = already activated)
	MuirGlacierBlock string `protobuf:"bytes,12,opt,name=muir_glacier_block,json=muirGlacierBlock,proto3" json:"muir_glacier_block,omitempty"`
	// berlin_block: Berlin switch block (nil = no fork, 0 = already on berlin)
	BerlinBlock string `protobuf:"bytes,13,opt,name=berlin_block,json=berlinBlock,proto3" json:"berlin_block,omitempty"`
	// london_block: London switch block (nil = no fork, 0 = already on london)
	LondonBlock string `protobuf:"bytes,17,opt,name=london_block,json=londonBlock,proto3" json:"london_block,omitempty"`
	// arrow_glacier_block: Eip-4345 (bomb delay) switch block (nil = no fork, 0 = already activated)
	ArrowGlacierBlock string `protobuf:"bytes,18,opt,name=arrow_glacier_block,json=arrowGlacierBlock,proto3" json:"arrow_glacier_block,omitempty"`
	// gray_glacier_block: EIP-5133 (bomb delay) switch block (nil = no fork, 0 = already activated)
	GrayGlacierBlock string `protobuf:"bytes,20,opt,name=gray_glacier_block,json=grayGlacierBlock,proto3" json:"gray_glacier_block,omitempty"`
	// merge_netsplit_block: Virtual fork after The Merge to use as a network splitter
	MergeNetsplitBlock string `protobuf:"bytes,21,opt,name=merge_netsplit_block,json=mergeNetsplitBlock,proto3" json:"merge_netsplit_block,omitempty"`
	// shanghai_block switch block (nil = no fork, 0 = already on shanghai)
	ShanghaiBlock string `protobuf:"bytes,22,opt,name=shanghai_block,json=shanghaiBlock,proto3" json:"shanghai_block,omitempty"`
	// cancun_block switch block (nil = no fork, 0 = already on cancun)
	CancunBlock string `protobuf:"bytes,23,opt,name=cancun_block,json=cancunBlock,proto3" json:"cancun_block,omitempty"`
}

func (x *V5ChainConfig) Reset() {
	*x = V5ChainConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V5ChainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V5ChainConfig) ProtoMessage() {}

// Deprecated: Use V5ChainConfig.ProtoReflect.Descriptor instead.
func (*V5ChainConfig) Descriptor() ([]byte, []int) {
	return file_os_evm_v1_legacy_params_v5_proto_rawDescGZIP(), []int{1}
}

func (x *V5ChainConfig) GetHomesteadBlock() string {
	if x != nil {
		return x.HomesteadBlock
	}
	return ""
}

func (x *V5ChainConfig) GetDaoForkBlock() string {
	if x != nil {
		return x.DaoForkBlock
	}
	return ""
}

func (x *V5ChainConfig) GetDaoForkSupport() bool {
	if x != nil {
		return x.DaoForkSupport
	}
	return false
}

func (x *V5ChainConfig) GetEip150Block() string {
	if x != nil {
		return x.Eip150Block
	}
	return ""
}

func (x *V5ChainConfig) GetEip150Hash() string {
	if x != nil {
		return x.Eip150Hash
	}
	return ""
}

func (x *V5ChainConfig) GetEip155Block() string {
	if x != nil {
		return x.Eip155Block
	}
	return ""
}

func (x *V5ChainConfig) GetEip158Block() string {
	if x != nil {
		return x.Eip158Block
	}
	return ""
}

func (x *V5ChainConfig) GetByzantiumBlock() string {
	if x != nil {
		return x.ByzantiumBlock
	}
	return ""
}

func (x *V5ChainConfig) GetConstantinopleBlock() string {
	if x != nil {
		return x.ConstantinopleBlock
	}
	return ""
}

func (x *V5ChainConfig) GetPetersburgBlock() string {
	if x != nil {
		return x.PetersburgBlock
	}
	return ""
}

func (x *V5ChainConfig) GetIstanbulBlock() string {
	if x != nil {
		return x.IstanbulBlock
	}
	return ""
}

func (x *V5ChainConfig) GetMuirGlacierBlock() string {
	if x != nil {
		return x.MuirGlacierBlock
	}
	return ""
}

func (x *V5ChainConfig) GetBerlinBlock() string {
	if x != nil {
		return x.BerlinBlock
	}
	return ""
}

func (x *V5ChainConfig) GetLondonBlock() string {
	if x != nil {
		return x.LondonBlock
	}
	return ""
}

func (x *V5ChainConfig) GetArrowGlacierBlock() string {
	if x != nil {
		return x.ArrowGlacierBlock
	}
	return ""
}

func (x *V5ChainConfig) GetGrayGlacierBlock() string {
	if x != nil {
		return x.GrayGlacierBlock
	}
	return ""
}

func (x *V5ChainConfig) GetMergeNetsplitBlock() string {
	if x != nil {
		return x.MergeNetsplitBlock
	}
	return ""
}

func (x *V5ChainConfig) GetShanghaiBlock() string {
	if x != nil {
		return x.ShanghaiBlock
	}
	return ""
}

func (x *V5ChainConfig) GetCancunBlock() string {
	if x != nil {
		return x.CancunBlock
	}
	return ""
}

// V5State represents a single Storage key value pair item.
type V5State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key is the stored key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// value is the stored value for the given key
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *V5State) Reset() {
	*x = V5State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V5State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V5State) ProtoMessage() {}

// Deprecated: Use V5State.ProtoReflect.Descriptor instead.
func (*V5State) Descriptor() ([]byte, []int) {
	return file_os_evm_v1_legacy_params_v5_proto_rawDescGZIP(), []int{2}
}

func (x *V5State) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *V5State) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// TransactionLogs define the logs generated from a transaction execution
// with a given hash. It it used for import/export data as transactions are not
// persisted on blockchain state after an upgrade.
type V5TransactionLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hash of the transaction
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// logs is an array of Logs for the given transaction hash
	Logs []*V5Log `protobuf:"bytes,2,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *V5TransactionLogs) Reset() {
	*x = V5TransactionLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V5TransactionLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V5TransactionLogs) ProtoMessage() {}

// Deprecated: Use V5TransactionLogs.ProtoReflect.Descriptor instead.
func (*V5TransactionLogs) Descriptor() ([]byte, []int) {
	return file_os_evm_v1_legacy_params_v5_proto_rawDescGZIP(), []int{3}
}

func (x *V5TransactionLogs) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *V5TransactionLogs) GetLogs() []*V5Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

// Log represents an protobuf compatible Ethereum Log that defines a contract
// log event. These events are generated by the LOG opcode and stored/indexed by
// the node.
//
// NOTE: address, topics and data are consensus fields. The rest of the fields
// are derived, i.e. filled in by the nodes, but not secured by consensus.
type V5Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address of the contract that generated the event
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// topics is a list of topics provided by the contract.
	Topics []string `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	// data which is supplied by the contract, usually ABI-encoded
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	// block_number of the block in which the transaction was included
	BlockNumber uint64 `protobuf:"varint,4,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	// tx_hash is the transaction hash
	TxHash string `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	// tx_index of the transaction in the block
	TxIndex uint64 `protobuf:"varint,6,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	// block_hash of the block in which the transaction was included
	BlockHash string `protobuf:"bytes,7,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// index of the log in the block
	Index uint64 `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	// removed is true if this log was reverted due to a chain
	// reorganisation. You must pay attention to this field if you receive logs
	// through a filter query.
	Removed bool `protobuf:"varint,9,opt,name=removed,proto3" json:"removed,omitempty"`
}

func (x *V5Log) Reset() {
	*x = V5Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V5Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V5Log) ProtoMessage() {}

// Deprecated: Use V5Log.ProtoReflect.Descriptor instead.
func (*V5Log) Descriptor() ([]byte, []int) {
	return file_os_evm_v1_legacy_params_v5_proto_rawDescGZIP(), []int{4}
}

func (x *V5Log) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *V5Log) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *V5Log) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *V5Log) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *V5Log) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *V5Log) GetTxIndex() uint64 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

func (x *V5Log) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *V5Log) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *V5Log) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

// TxResult stores results of Tx execution.
type V5TxResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// contract_address contains the ethereum address of the created contract (if
	// any). If the state transition is an evm.Call, the contract address will be
	// empty.
	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// bloom represents the bloom filter bytes
	Bloom []byte `protobuf:"bytes,2,opt,name=bloom,proto3" json:"bloom,omitempty"`
	// tx_logs contains the transaction hash and the proto-compatible ethereum
	// logs.
	TxLogs *V5TransactionLogs `protobuf:"bytes,3,opt,name=tx_logs,json=txLogs,proto3" json:"tx_logs,omitempty"`
	// ret defines the bytes from the execution.
	Ret []byte `protobuf:"bytes,4,opt,name=ret,proto3" json:"ret,omitempty"`
	// reverted flag is set to true when the call has been reverted
	Reverted bool `protobuf:"varint,5,opt,name=reverted,proto3" json:"reverted,omitempty"`
	// gas_used notes the amount of gas consumed while execution
	GasUsed uint64 `protobuf:"varint,6,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
}

func (x *V5TxResult) Reset() {
	*x = V5TxResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V5TxResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V5TxResult) ProtoMessage() {}

// Deprecated: Use V5TxResult.ProtoReflect.Descriptor instead.
func (*V5TxResult) Descriptor() ([]byte, []int) {
	return file_os_evm_v1_legacy_params_v5_proto_rawDescGZIP(), []int{5}
}

func (x *V5TxResult) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *V5TxResult) GetBloom() []byte {
	if x != nil {
		return x.Bloom
	}
	return nil
}

func (x *V5TxResult) GetTxLogs() *V5TransactionLogs {
	if x != nil {
		return x.TxLogs
	}
	return nil
}

func (x *V5TxResult) GetRet() []byte {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *V5TxResult) GetReverted() bool {
	if x != nil {
		return x.Reverted
	}
	return false
}

func (x *V5TxResult) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

// AccessTuple is the element type of an access list.
type V5AccessTuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is a hex formatted ethereum address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// storage_keys are hex formatted hashes of the storage keys
	StorageKeys []string `protobuf:"bytes,2,rep,name=storage_keys,json=storageKeys,proto3" json:"storage_keys,omitempty"`
}

func (x *V5AccessTuple) Reset() {
	*x = V5AccessTuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V5AccessTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V5AccessTuple) ProtoMessage() {}

// Deprecated: Use V5AccessTuple.ProtoReflect.Descriptor instead.
func (*V5AccessTuple) Descriptor() ([]byte, []int) {
	return file_os_evm_v1_legacy_params_v5_proto_rawDescGZIP(), []int{6}
}

func (x *V5AccessTuple) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *V5AccessTuple) GetStorageKeys() []string {
	if x != nil {
		return x.StorageKeys
	}
	return nil
}

// TraceConfig holds extra parameters to trace functions.
type V5TraceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// tracer is a custom javascript tracer
	Tracer string `protobuf:"bytes,1,opt,name=tracer,proto3" json:"tracer,omitempty"`
	// timeout overrides the default timeout of 5 seconds for JavaScript-based tracing
	// calls
	Timeout string `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// reexec defines the number of blocks the tracer is willing to go back
	Reexec uint64 `protobuf:"varint,3,opt,name=reexec,proto3" json:"reexec,omitempty"`
	// disable_stack switches stack capture
	DisableStack bool `protobuf:"varint,5,opt,name=disable_stack,json=disableStack,proto3" json:"disable_stack,omitempty"`
	// disable_storage switches storage capture
	DisableStorage bool `protobuf:"varint,6,opt,name=disable_storage,json=disableStorage,proto3" json:"disable_storage,omitempty"`
	// debug can be used to print output during capture end
	Debug bool `protobuf:"varint,8,opt,name=debug,proto3" json:"debug,omitempty"`
	// limit defines the maximum length of output, but zero means unlimited
	Limit int32 `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	// overrides can be used to execute a trace using future fork rules
	Overrides *V5ChainConfig `protobuf:"bytes,10,opt,name=overrides,proto3" json:"overrides,omitempty"`
	// enable_memory switches memory capture
	EnableMemory bool `protobuf:"varint,11,opt,name=enable_memory,json=enableMemory,proto3" json:"enable_memory,omitempty"`
	// enable_return_data switches the capture of return data
	EnableReturnData bool `protobuf:"varint,12,opt,name=enable_return_data,json=enableReturnData,proto3" json:"enable_return_data,omitempty"`
	// tracer_json_config configures the tracer using a JSON string
	TracerJsonConfig string `protobuf:"bytes,13,opt,name=tracer_json_config,json=tracerJsonConfig,proto3" json:"tracer_json_config,omitempty"`
}

func (x *V5TraceConfig) Reset() {
	*x = V5TraceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_os_evm_v1_legacy_params_v5_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V5TraceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V5TraceConfig) ProtoMessage() {}

// Deprecated: Use V5TraceConfig.ProtoReflect.Descriptor instead.
func (*V5TraceConfig) Descriptor() ([]byte, []int) {
	return file_os_evm_v1_legacy_params_v5_proto_rawDescGZIP(), []int{7}
}

func (x *V5TraceConfig) GetTracer() string {
	if x != nil {
		return x.Tracer
	}
	return ""
}

func (x *V5TraceConfig) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

func (x *V5TraceConfig) GetReexec() uint64 {
	if x != nil {
		return x.Reexec
	}
	return 0
}

func (x *V5TraceConfig) GetDisableStack() bool {
	if x != nil {
		return x.DisableStack
	}
	return false
}

func (x *V5TraceConfig) GetDisableStorage() bool {
	if x != nil {
		return x.DisableStorage
	}
	return false
}

func (x *V5TraceConfig) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *V5TraceConfig) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *V5TraceConfig) GetOverrides() *V5ChainConfig {
	if x != nil {
		return x.Overrides
	}
	return nil
}

func (x *V5TraceConfig) GetEnableMemory() bool {
	if x != nil {
		return x.EnableMemory
	}
	return false
}

func (x *V5TraceConfig) GetEnableReturnData() bool {
	if x != nil {
		return x.EnableReturnData
	}
	return false
}

func (x *V5TraceConfig) GetTracerJsonConfig() string {
	if x != nil {
		return x.TracerJsonConfig
	}
	return ""
}

var File_os_evm_v1_legacy_params_v5_proto protoreflect.FileDescriptor

var file_os_evm_v1_legacy_params_v5_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6f, 0x73, 0x2f, 0x65, 0x76, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x76, 0x35, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x6f, 0x73, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x11, 0x61,
	0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x03, 0x0a, 0x08, 0x56, 0x35, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x65, 0x76, 0x6d, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x65, 0x76, 0x6d, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x22, 0x52, 0x08, 0x65, 0x76,
	0x6d, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x3d, 0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x18, 0xf2,
	0xde, 0x1f, 0x14, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22, 0x52, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x63, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x16, 0xf2, 0xde, 0x1f, 0x12,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x22, 0x52, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x41,
	0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x65, 0x69, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x03, 0x42, 0x22, 0xe2, 0xde, 0x1f, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x49, 0x50,
	0x73, 0xf2, 0xde, 0x1f, 0x11, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x5f, 0x65, 0x69, 0x70, 0x73, 0x22, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x45, 0x69, 0x70,
	0x73, 0x12, 0x58, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x73, 0x2e, 0x65, 0x76, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x35, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x1b, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x13, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x15, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x78, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x55, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x78, 0x73, 0x22,
	0xff, 0x0e, 0x0a, 0x0d, 0x56, 0x35, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x5c, 0x0a, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x61, 0x64, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x33, 0xda, 0xde, 0x1f, 0x15,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74,
	0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x16, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x68,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x61, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52,
	0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x68, 0x0a, 0x0e, 0x64, 0x61, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x42, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49,
	0x6e, 0x74, 0xe2, 0xde, 0x1f, 0x0c, 0x44, 0x41, 0x4f, 0x46, 0x6f, 0x72, 0x6b, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0xf2, 0xde, 0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x61, 0x6f, 0x5f,
	0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52, 0x0c, 0x64, 0x61, 0x6f,
	0x46, 0x6f, 0x72, 0x6b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x57, 0x0a, 0x10, 0x64, 0x61, 0x6f,
	0x5f, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x42, 0x2d, 0xe2, 0xde, 0x1f, 0x0e, 0x44, 0x41, 0x4f, 0x46, 0x6f, 0x72, 0x6b,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0xf2, 0xde, 0x1f, 0x17, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x64, 0x61, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x22, 0x52, 0x0e, 0x64, 0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x62, 0x0a, 0x0c, 0x65, 0x69, 0x70, 0x31, 0x35, 0x30, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3f, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e,
	0x49, 0x6e, 0x74, 0xe2, 0xde, 0x1f, 0x0b, 0x45, 0x49, 0x50, 0x31, 0x35, 0x30, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0xf2, 0xde, 0x1f, 0x13, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x65, 0x69, 0x70, 0x31,
	0x35, 0x30, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52, 0x0b, 0x65, 0x69, 0x70, 0x31, 0x35,
	0x30, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x49, 0x0a, 0x0b, 0x65, 0x69, 0x70, 0x31, 0x35, 0x30,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x28, 0xe2, 0xde, 0x1f,
	0x0a, 0x45, 0x49, 0x50, 0x31, 0x35, 0x30, 0x48, 0x61, 0x73, 0x68, 0xf2, 0xde, 0x1f, 0x16, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x62, 0x79, 0x7a, 0x61, 0x6e, 0x74, 0x69, 0x75, 0x6d, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52, 0x0a, 0x65, 0x69, 0x70, 0x31, 0x35, 0x30, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x62, 0x0a, 0x0c, 0x65, 0x69, 0x70, 0x31, 0x35, 0x35, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3f, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49,
	0x6e, 0x74, 0xe2, 0xde, 0x1f, 0x0b, 0x45, 0x49, 0x50, 0x31, 0x35, 0x35, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0xf2, 0xde, 0x1f, 0x13, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x65, 0x69, 0x70, 0x31, 0x35,
	0x35, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52, 0x0b, 0x65, 0x69, 0x70, 0x31, 0x35, 0x35,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x62, 0x0a, 0x0c, 0x65, 0x69, 0x70, 0x31, 0x35, 0x38, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3f, 0xda, 0xde, 0x1f,
	0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61,
	0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xe2, 0xde, 0x1f, 0x0b, 0x45, 0x49, 0x50, 0x31, 0x35, 0x38,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0xf2, 0xde, 0x1f, 0x13, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x65,
	0x69, 0x70, 0x31, 0x35, 0x38, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52, 0x0b, 0x65, 0x69,
	0x70, 0x31, 0x35, 0x38, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x5c, 0x0a, 0x0f, 0x62, 0x79, 0x7a,
	0x61, 0x6e, 0x74, 0x69, 0x75, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x33, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f,
	0x16, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x62, 0x79, 0x7a, 0x61, 0x6e, 0x74, 0x69, 0x75, 0x6d,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52, 0x0e, 0x62, 0x79, 0x7a, 0x61, 0x6e, 0x74, 0x69,
	0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x6b, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x69, 0x6e, 0x6f, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74,
	0xf2, 0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x69, 0x6e, 0x6f, 0x70, 0x6c, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52,
	0x13, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x6f, 0x70, 0x6c, 0x65, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x5f, 0x0a, 0x10, 0x70, 0x65, 0x74, 0x65, 0x72, 0x73, 0x62, 0x75,
	0x72, 0x67, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x34,
	0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f,
	0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x17, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x70, 0x65, 0x74, 0x65, 0x72, 0x73, 0x62, 0x75, 0x72, 0x67, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x52, 0x0f, 0x70, 0x65, 0x74, 0x65, 0x72, 0x73, 0x62, 0x75, 0x72, 0x67,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x59, 0x0a, 0x0e, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x62, 0x75,
	0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32, 0xda,
	0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x62, 0x75, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x22, 0x52, 0x0d, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x62, 0x75, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x64, 0x0a, 0x12, 0x6d, 0x75, 0x69, 0x72, 0x5f, 0x67, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0xda, 0xde,
	0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d,
	0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x19, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x6d, 0x75, 0x69, 0x72, 0x5f, 0x67, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x52, 0x10, 0x6d, 0x75, 0x69, 0x72, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65,
	0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x53, 0x0a, 0x0c, 0x62, 0x65, 0x72, 0x6c, 0x69, 0x6e,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xda, 0xde,
	0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d,
	0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x13, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x62, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52, 0x0b,
	0x62, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x53, 0x0a, 0x0c, 0x6c,
	0x6f, 0x6e, 0x64, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x30, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b,
	0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x13,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6c, 0x6f, 0x6e, 0x64, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x22, 0x52, 0x0b, 0x6c, 0x6f, 0x6e, 0x64, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x67, 0x0a, 0x13, 0x61, 0x72, 0x72, 0x6f, 0x77, 0x5f, 0x67, 0x6c, 0x61, 0x63, 0x69, 0x65,
	0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x37, 0xda,
	0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x1a, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x61, 0x72, 0x72, 0x6f, 0x77, 0x5f, 0x67, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52, 0x11, 0x61, 0x72, 0x72, 0x6f, 0x77, 0x47, 0x6c, 0x61,
	0x63, 0x69, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x64, 0x0a, 0x12, 0x67, 0x72, 0x61,
	0x79, 0x5f, 0x67, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74,
	0xf2, 0xde, 0x1f, 0x19, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x67,
	0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52, 0x10, 0x67,
	0x72, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x6a, 0x0a, 0x14, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x73, 0x70, 0x6c, 0x69,
	0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0xda,
	0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x73, 0x70, 0x6c, 0x69, 0x74,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52, 0x12, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4e, 0x65,
	0x74, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x59, 0x0a, 0x0e, 0x73,
	0x68, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x69, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x32, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73,
	0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde,
	0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x69,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x61,
	0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x53, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x75, 0x6e,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xda, 0xde,
	0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d,
	0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xf2, 0xde, 0x1f, 0x13, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x63, 0x61, 0x6e, 0x63, 0x75, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x52, 0x0b,
	0x63, 0x61, 0x6e, 0x63, 0x75, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4a, 0x04, 0x08, 0x0e, 0x10,
	0x0f, 0x4a, 0x04, 0x08, 0x0f, 0x10, 0x10, 0x4a, 0x04, 0x08, 0x10, 0x10, 0x11, 0x4a, 0x04, 0x08,
	0x13, 0x10, 0x14, 0x52, 0x0d, 0x79, 0x6f, 0x6c, 0x6f, 0x5f, 0x76, 0x33, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x0b, 0x65, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x0e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x10, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x31, 0x0a, 0x07, 0x56, 0x35, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x4d, 0x0a, 0x11, 0x56, 0x35, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x73,
	0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x35, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x22, 0xcc, 0x02, 0x0a, 0x05, 0x56, 0x35, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0f, 0xea, 0xde, 0x1f, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xea, 0xde, 0x1f, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x06, 0x74,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2f, 0x0a, 0x08, 0x74, 0x78, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x42, 0x14, 0xea, 0xde, 0x1f, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x07, 0x74,
	0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xea, 0xde, 0x1f, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x0c, 0xea, 0xde, 0x1f, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x22, 0x88, 0x02, 0x0a, 0x0a, 0x56, 0x35, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x46, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xf2, 0xde, 0x1f,
	0x17, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x12,
	0x4d, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x73, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x35, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x42, 0x16,
	0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x78,
	0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x52, 0x06, 0x74, 0x78, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x63, 0x0a,
	0x0d, 0x56, 0x35, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0f,
	0xea, 0xde, 0x1f, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x3a, 0x04, 0x88, 0xa0,
	0x1f, 0x00, 0x22, 0x9d, 0x04, 0x0a, 0x0d, 0x56, 0x35, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x65, 0x78, 0x65, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x65, 0x65, 0x78, 0x65, 0x63, 0x12, 0x35,
	0x0a, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x10, 0xea, 0xde, 0x1f, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x3b, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x42, 0x12,
	0xea, 0xde, 0x1f, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x36,
	0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x73, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x35,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x6f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x42, 0x10, 0xea,
	0xde, 0x1f, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52,
	0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x42, 0x0a,
	0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x42, 0x14, 0xea, 0xde, 0x1f, 0x10, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x3e, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x6a, 0x73, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xea,
	0xde, 0x1f, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x10, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x4a, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x52, 0x0e, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x13, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x8c, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x73, 0x2e, 0x65, 0x76,
	0x6d, 0x2e, 0x76, 0x31, 0x42, 0x13, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x56, 0x35, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x20, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x73,
	0x2f, 0x65, 0x76, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x76, 0x6d, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x4f, 0x45, 0x58, 0xaa, 0x02, 0x09, 0x4f, 0x73, 0x2e, 0x45, 0x76, 0x6d, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x09, 0x4f, 0x73, 0x5c, 0x45, 0x76, 0x6d, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x4f, 0x73,
	0x5c, 0x45, 0x76, 0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x4f, 0x73, 0x3a, 0x3a, 0x45, 0x76, 0x6d, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_os_evm_v1_legacy_params_v5_proto_rawDescOnce sync.Once
	file_os_evm_v1_legacy_params_v5_proto_rawDescData = file_os_evm_v1_legacy_params_v5_proto_rawDesc
)

func file_os_evm_v1_legacy_params_v5_proto_rawDescGZIP() []byte {
	file_os_evm_v1_legacy_params_v5_proto_rawDescOnce.Do(func() {
		file_os_evm_v1_legacy_params_v5_proto_rawDescData = protoimpl.X.CompressGZIP(file_os_evm_v1_legacy_params_v5_proto_rawDescData)
	})
	return file_os_evm_v1_legacy_params_v5_proto_rawDescData
}

var file_os_evm_v1_legacy_params_v5_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_os_evm_v1_legacy_params_v5_proto_goTypes = []interface{}{
	(*V5Params)(nil),          // 0: os.evm.v1.V5Params
	(*V5ChainConfig)(nil),     // 1: os.evm.v1.V5ChainConfig
	(*V5State)(nil),           // 2: os.evm.v1.V5State
	(*V5TransactionLogs)(nil), // 3: os.evm.v1.V5TransactionLogs
	(*V5Log)(nil),             // 4: os.evm.v1.V5Log
	(*V5TxResult)(nil),        // 5: os.evm.v1.V5TxResult
	(*V5AccessTuple)(nil),     // 6: os.evm.v1.V5AccessTuple
	(*V5TraceConfig)(nil),     // 7: os.evm.v1.V5TraceConfig
}
var file_os_evm_v1_legacy_params_v5_proto_depIdxs = []int32{
	1, // 0: os.evm.v1.V5Params.chain_config:type_name -> os.evm.v1.V5ChainConfig
	4, // 1: os.evm.v1.V5TransactionLogs.logs:type_name -> os.evm.v1.V5Log
	3, // 2: os.evm.v1.V5TxResult.tx_logs:type_name -> os.evm.v1.V5TransactionLogs
	1, // 3: os.evm.v1.V5TraceConfig.overrides:type_name -> os.evm.v1.V5ChainConfig
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_os_evm_v1_legacy_params_v5_proto_init() }
func file_os_evm_v1_legacy_params_v5_proto_init() {
	if File_os_evm_v1_legacy_params_v5_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_os_evm_v1_legacy_params_v5_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V5Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_os_evm_v1_legacy_params_v5_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V5ChainConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_os_evm_v1_legacy_params_v5_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V5State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_os_evm_v1_legacy_params_v5_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V5TransactionLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_os_evm_v1_legacy_params_v5_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V5Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_os_evm_v1_legacy_params_v5_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V5TxResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_os_evm_v1_legacy_params_v5_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V5AccessTuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_os_evm_v1_legacy_params_v5_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V5TraceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_os_evm_v1_legacy_params_v5_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_os_evm_v1_legacy_params_v5_proto_goTypes,
		DependencyIndexes: file_os_evm_v1_legacy_params_v5_proto_depIdxs,
		MessageInfos:      file_os_evm_v1_legacy_params_v5_proto_msgTypes,
	}.Build()
	File_os_evm_v1_legacy_params_v5_proto = out.File
	file_os_evm_v1_legacy_params_v5_proto_rawDesc = nil
	file_os_evm_v1_legacy_params_v5_proto_goTypes = nil
	file_os_evm_v1_legacy_params_v5_proto_depIdxs = nil
}
